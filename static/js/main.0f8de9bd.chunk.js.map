{"version":3,"sources":["FeatureDialog.js","util.js","Graph.js","Sidebar.js","SettingsDialog.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["FeatureDialog","data","onHide","Modal","show","Header","closeButton","Title","Body","Object","entries","filter","entry","includes","map","key","value","style","display","maxHeight","margin","backgroundColor","minWidth","wordBreak","overflow","String","tags","keys","length","Footer","Button","variant","onClick","parseTag","tag","split","name","type","val","makePath","edges","path","i","st","push","source","x","y","last","target","generatePaths","graph","reduce","rv","v","Function","undefined","el","find","r","values","links","original","projectLine","x1","y1","x2","y2","units","d","Math","sqrt","Graph","React","forwardRef","props","ref","gref","useRef","drawPaths","drawLabels","settings","chunkSize","forceSteps","linkSteps","sequenceThickness","linkThickness","theta","forceType","strengthCenter","strengthXY","color","width","height","redraw","onFeatureClick","console","log","useMemo","G","Gp","nodes","seen","paths","pathNodes","j","curr","id","sequence","rest","linkNum","concat","strand1","strand2","loop","link","reprocessGraph","colors","fromEntries","p","d3","create","random","simulation","force","distance","iterations","strength","tick","useEffect","current","call","extent","scaleExtent","on","attr","transform","result","generateEdges","nodePositionMap","endsWith","fontSize","viewBox","toString","s1","t1","s2","t2","m1","m2","m3","abs","pp","index","dx","dy","dr","sweep","cpath","strokeWidth","stroke","fill","cx1","cy1","cx2","cy2","moveTo","bezierCurveTo","line","context","invisibleTextPath","startsWith","replace","toLowerCase","darker","Fragment","startOffset","textAnchor","href","Sidebar","onDrawLabels","onColorChange","onPathDraw","onRedraw","Form","Label","Control","onChange","event","as","Group","checked","Check","label","SettingsDialog","paramSettings","onSettings","useState","setSettings","size","onSubmit","preventDefault","Row","column","sm","Text","muted","Col","min","max","AboutDialog","OpenURLDialog","onData","setValue","OpenFileDialog","onGraph","a","files","text","onExportSVG","showAbout","setShowAbout","showSettings","setShowSettings","showOpenURL","setShowOpenURL","showOpenFile","setShowOpenFile","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","title","Item","Link","App","featureData","setFeatureData","setData","error","setError","setColor","updateState","forceUpdate","useCallback","pathDraw","setPathDraw","setRedraw","setDrawLabels","useQueryParams","withDefault","NumberParam","StringParam","dataset","query","setQuery","fetch","ok","Error","statusText","message","file","header","headerLine","forEach","len","seq","tagfields","gfa1","slice","LN","cigar","source1","target1","charAt","parseGFA","saveAs","svg","xmlns","cloneNode","fragment","window","location","walker","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","attributes","setAttributeNS","string","XMLSerializer","serializeToString","Blob","serialize","onModal","c","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0f8de9bd.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\n\nexport function FeatureDialog({ data, onHide }) {\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>Feature details</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <div>Attributes</div>\n        {Object.entries(data)\n          .filter(entry => !['source', 'target', 'linkNum', 'tags'].includes(entry[0]))\n          .map(([key, value]) => (\n            <div\n              key={`${key}_${value}`}\n              style={{ display: 'flex', maxHeight: 150, margin: 3 }}\n            >\n              <div style={{ backgroundColor: '#dda', minWidth: 100 }}>{key}</div>\n              <div style={{ wordBreak: 'break-word', overflow: 'auto' }}>\n                {String(value)}\n              </div>\n            </div>\n          ))}\n        <hr />\n        {data.tags && Object.keys(data.tags).length ? (\n          <>\n            <div>Tags</div>\n            {Object.entries(data.tags).map(([key, value]) => (\n              <div\n                key={`${key}_${value}`}\n                style={{ display: 'flex', maxHeight: 150, margin: 3 }}\n              >\n                <div style={{ backgroundColor: '#dda', minWidth: 100 }}>{key}</div>\n                <div style={{ wordBreak: 'break-word', overflow: 'auto' }}>\n                  {String(value)}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onHide}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","function parseTag(tag, tags) {\n  const [name, type, val] = tag.split(':')\n  if (type === 'i') {\n    tags[name] = +val\n  } else if (type === 'Z') {\n    tags[name] = val\n  }\n}\n\nexport function parseGFA(file) {\n  const graph = { nodes: [], links: [], paths: [], header: [] }\n  for (const line of file.split('\\n')) {\n    if (line.startsWith('H')) {\n      const headerLine = {}\n      const [, ...rest] = line.split('\\t')\n      rest.forEach(tag => parseTag(tag, headerLine))\n      graph.header.push(headerLine)\n    }\n    if (line.startsWith('S')) {\n      const [, name, ...rest] = line.split('\\t')\n      let len = 0\n      let seq = ''\n      let tagfields\n      let gfa1 = false\n      if (+rest[0]) {\n        len = +rest[0]\n        seq = rest[1]\n        tagfields = rest.slice(2)\n      } else {\n        gfa1 = true\n        seq = rest[0]\n        len = seq.length\n        tagfields = rest.slice(1)\n      }\n      const tags = {}\n      for (let i = 0; i < tagfields.length; i++) {\n        parseTag(rest[i], tags)\n      }\n      if (gfa1 && tags.LN) {\n        len = tags.LN\n      }\n      graph.nodes.push({ id: name, length: len, sequence: seq, tags })\n    } else if (line.startsWith('E')) {\n      const [\n        ,\n        edgeId,\n        source,\n        target,\n        bed1pos,\n        end1pos,\n        bed2pos,\n        end2pos,\n        cigar,\n        ...rest\n      ] = line.split('\\t')\n      const source1 = source.slice(0, -1)\n      const target1 = target.slice(0, -1)\n      const strand1 = source.charAt(source.length - 1)\n      const strand2 = source.charAt(target.length - 1)\n      const tags = {}\n      for (let i = 0; i < rest.length; i++) {\n        parseTag(rest[i], tags)\n      }\n\n      graph.links.push({\n        source: source1,\n        target: target1,\n        strand1,\n        strand2,\n        cigar,\n        tags,\n      })\n    } else if (line.startsWith('L')) {\n      const [, source, strand1, target, strand2, cigar, ...rest] = line.split('\\t')\n      const tags = {}\n      for (let i = 0; i < rest.length; i++) {\n        parseTag(rest[i], tags)\n      }\n      graph.links.push({ source, target, strand1, strand2, cigar, tags })\n    } else if (line.startsWith('P')) {\n      const [, name, path, ...rest] = line.split('\\t')\n\n      graph.paths.push({ name, path, rest })\n    }\n  }\n  return graph\n}\n// adapted from https://observablehq.com/@mbostock/saving-svg\nexport function serialize(svg) {\n  const xmlns = 'http://www.w3.org/2000/xmlns/'\n  const xlinkns = 'http://www.w3.org/1999/xlink'\n  const svgns = 'http://www.w3.org/2000/svg'\n\n  svg = svg.cloneNode(true)\n  const fragment = `${window.location.href}#`\n  const walker = document.createTreeWalker(svg, NodeFilter.SHOW_ELEMENT, null, false)\n  while (walker.nextNode()) {\n    for (const attr of walker.currentNode.attributes) {\n      if (attr.value.includes(fragment)) {\n        attr.value = attr.value.replace(fragment, '#')\n      }\n    }\n  }\n  svg.setAttributeNS(xmlns, 'xmlns', svgns)\n  svg.setAttributeNS(xmlns, 'xmlns:xlink', xlinkns)\n  const serializer = new window.XMLSerializer()\n  const string = serializer.serializeToString(svg)\n  return new Blob([string], { type: 'image/svg+xml' })\n}\n\n// Given a GFA graph with sequence nodes ('S' tags), it breaks the S tags into\n// multiple nodes depending on how long the sequence is, which gives the graph\n// an organic look when the layout algorithm is applied\nexport function reprocessGraph(G, chunkSize) {\n  const Gp = { nodes: [], links: [] }\n\n  const seen = {}\n  for (let i = 0; i < (G.paths || {}).length; i++) {\n    const path = G.paths[i]\n    const pathNodes = path.path.split(',')\n    for (let j = 0; j < pathNodes.length - 1; j++) {\n      const curr = `${pathNodes[j]}_${pathNodes[j + 1]}`\n      if (!seen[curr]) {\n        seen[curr] = [path.name]\n      } else {\n        seen[curr].push(path.name)\n      }\n    }\n  }\n\n  for (let i = 0; i < G.nodes.length; i++) {\n    const { id, sequence, length, ...rest } = G.nodes[i]\n    const nodes = []\n\n    // break long sequence into multiple nodes, for organic layout\n    nodes.push({ ...rest, id: `${id}-start` })\n    for (let i = chunkSize; i < length - chunkSize; i += chunkSize) {\n      nodes.push({ ...rest, id: `${id}-${i}` })\n    }\n    nodes.push({ ...rest, id: `${id}-end` })\n\n    // recreate links\n    for (let j = 0; j < nodes.length - 1; j++) {\n      const source = nodes[j].id\n      const target = nodes[j + 1].id\n      Gp.links.push({\n        ...rest,\n        source,\n        target,\n        id,\n        length,\n        sequence,\n        linkNum: i,\n      })\n    }\n    Gp.nodes = Gp.nodes.concat(nodes)\n  }\n  for (let i = 0; i < G.links.length; i++) {\n    const { strand1, strand2, source, target, ...rest } = G.links[i]\n    const paths = seen[`${source}${strand1}_${target}${strand2}`] || []\n    const loop = source === target\n\n    // enumerates cases for which end of source connects to\n    // which end of the target\n    const link = {\n      source: `${source}-${strand1 === '+' ? 'end' : 'start'}`,\n      target: `${target}-${strand2 === '+' ? 'start' : 'end'}`,\n      ...rest,\n    }\n    if (loop) {\n      link.loop = true\n    }\n    if (paths.length) {\n      link.paths = paths\n    }\n    Gp.links.push(link)\n  }\n  return Gp\n}\n\n// source https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\n// returns an array that contains groupings of xs by attribute key\nfunction groupByArray(xs, key) {\n  return xs.reduce(function (rv, x) {\n    const v = key instanceof Function ? key(x) : x[key]\n    if (v !== undefined) {\n      const el = rv.find(r => r && r.key === v)\n      if (el) {\n        el.values.push(x)\n      } else {\n        rv.push({ key: v, values: [x] })\n      }\n    }\n    return rv\n  }, [])\n}\n\n// connects successive start->end to a path\n// param edges: {source:{x,y}, target:{x,y}}[]\nfunction makePath(edges) {\n  const path = []\n  let i = 0\n  for (; i < edges.length; i++) {\n    const st = edges[i]\n    path.push([st.source.x, st.source.y])\n  }\n  const last = edges[i - 1]\n  path.push([last.target.x, last.target.y])\n  return path\n}\n\n// groups the edges data structure by the linkNum attribute\nexport function generatePaths(edges, graph) {\n  const ret = groupByArray(edges, 'linkNum')\n  return ret.map(entry => ({\n    links: makePath(entry.values),\n    original: graph[entry.key],\n  }))\n}\n\nexport function generateEdges(links, graph) {\n  const result = []\n  for (let i = 0; i < links.length; i++) {\n    const link = links[i]\n    const original = graph[i]\n    if (!original.id) {\n      result.push({\n        links: [\n          [link.source.x, link.source.y],\n          [link.target.x, link.target.y],\n        ],\n        original,\n      })\n    }\n  }\n  return result\n}\n\n// implements this algorithm to calculate a control point\n// that points \"forwards\" of a given contig node\n// https://math.stackexchange.com/questions/175896\n\nexport function projectLine(x1, y1, x2, y2, units) {\n  const dp = Math.sqrt((y2 - y1) ** 2 + (x2 - x1) ** 2)\n  const d = units / dp\n  const cx = (1 - d) * x1 + d * x2\n  const cy = (1 - d) * y1 + d * y2\n  return [cx, cy]\n}\n","import React, { useMemo, useRef, useEffect } from 'react'\nimport * as d3 from 'd3'\nimport { projectLine, reprocessGraph, generatePaths, generateEdges } from './util'\n\nconst Graph = React.forwardRef((props, ref) => {\n  const gref = useRef()\n  const {\n    graph,\n    drawPaths = false,\n    drawLabels = false,\n    settings: {\n      chunkSize = 1000,\n      forceSteps = 500,\n      linkSteps = 3,\n      sequenceThickness = 10,\n      linkThickness = 2,\n      theta = 0.9,\n      forceType = 'center',\n      strengthCenter = -50,\n      strengthXY = 0.3,\n    },\n    color = 'Rainbow',\n    width = 2000,\n    height = 1000,\n    redraw = 0,\n    onFeatureClick = () => {\n      console.log('no feature click configured')\n    },\n  } = props\n\n  const data = useMemo(() => {\n    return reprocessGraph(graph, chunkSize)\n  }, [chunkSize, graph])\n\n  const colors = useMemo(() => {\n    return Object.fromEntries(\n      (graph.paths || []).map((p, i) => {\n        return [p.name, d3.schemeCategory10[i]]\n      }),\n    )\n  }, [graph.paths])\n  const links = useMemo(() => {\n    const links = data.links.map(d =>\n      Object.create({ ...d, x: Math.random(), y: Math.random() }),\n    )\n    const nodes = data.nodes.map(d =>\n      Object.create({ ...d, x: Math.random(), y: Math.random() }),\n    )\n    const simulation = d3\n      .forceSimulation(nodes)\n      .force(\n        'link',\n        d3\n          .forceLink(links)\n          .id(d => d.id)\n          .distance(link => {\n            return link.sequence ? 1 : 10\n          })\n          .iterations(linkSteps),\n      )\n      .force('charge', d3.forceManyBody().strength(strengthCenter).theta(theta))\n\n    if (forceType === 'center') {\n      simulation.force('center', d3.forceCenter(width / 3, height / 3))\n    } else if (forceType === 'xy') {\n      simulation\n        .force(\n          'x',\n          d3\n            .forceX()\n            .x(width / 3)\n            .strength(strengthXY),\n        )\n        .force(\n          'y',\n          d3\n            .forceY()\n            .y(height / 3)\n            .strength(strengthXY),\n        )\n    }\n\n    for (let i = 0; i < forceSteps; ++i) {\n      simulation.tick()\n    }\n    // used for redrawing\n    // eslint-disable-next-line no-unused-vars\n    const m = redraw\n    return links\n  }, [\n    data.links,\n    data.nodes,\n    linkSteps,\n    strengthCenter,\n    theta,\n    forceType,\n    redraw,\n    width,\n    height,\n    strengthXY,\n    forceSteps,\n  ])\n\n  useEffect(() => {\n    // zoom logic, similar to https://observablehq.com/@d3/zoom\n    function zoomed() {\n      d3.select(gref.current).attr('transform', d3.event.transform)\n    }\n    d3.select(ref.current).call(\n      d3\n        .zoom()\n        .extent([\n          [0, 0],\n          [width, height],\n        ])\n        .scaleExtent([0.1, 8])\n        .on('zoom', zoomed),\n    )\n  }, [height, ref, width])\n\n  const paths = generatePaths(links, graph.nodes)\n  const edges = generateEdges(links, data.links)\n\n  const nodePositionMap = {}\n  for (let i = 0; i < links.length; i++) {\n    const { source, target } = data.links[i]\n    const { linkNum } = links[i]\n    if (linkNum !== undefined) {\n      if (source.endsWith('start')) {\n        nodePositionMap[source] = {\n          source: links[linkNum].target,\n          target: links[linkNum].source,\n        }\n        nodePositionMap[target] = {\n          target: links[linkNum].target,\n          source: links[linkNum].source,\n        }\n      } else {\n        nodePositionMap[source] = {\n          source: links[linkNum].source,\n          target: links[linkNum].target,\n        }\n        nodePositionMap[target] = {\n          target: links[linkNum].source,\n          source: links[linkNum].target,\n        }\n      }\n    }\n  }\n\n  return (\n    <svg\n      width=\"100%\"\n      height=\"100%\"\n      ref={ref}\n      style={{ fontSize: 10 }}\n      viewBox={[0, 0, width, height].toString()}\n    >\n      <g ref={gref}>\n        {edges.map((p, j) => {\n          const x1 = p.links[0][0]\n          const y1 = p.links[0][1]\n          const x2 = p.links[1][0]\n          const y2 = p.links[1][1]\n\n          if (drawPaths) {\n            if (!p.original.paths) {\n              return null\n            }\n\n            const { source: s1, target: t1 } = nodePositionMap[p.original.source]\n            const { source: s2, target: t2 } = nodePositionMap[p.original.target]\n            const m1 = (y2 - y1) / (x2 - x1)\n            const m2 = (s1.y - t1.y) / (s1.x - t1.x)\n            const m3 = (s2.y - t2.y) / (s2.x - t2.x)\n            if (Math.abs(m1 - m2) < 0.5 || Math.abs(m1 - m3) < 0.5) {\n              return p.original.paths.map((pp, index) => {\n                const dx = x2 - x1\n                const dy = y2 - y1\n                const dr = Math.sqrt(dx * dx + dy * dy) + Math.random() * 40\n                const sweep = index % 2\n                const cpath = `M${x1},${y1}A${dr},${dr} 0 0,${sweep} ${x2},${y2}`\n                return (\n                  <path\n                    key={`${cpath}-${index}`}\n                    d={cpath}\n                    strokeWidth={linkThickness}\n                    stroke={colors[pp]}\n                    fill=\"none\"\n                    onClick={() => onFeatureClick(p.original)}\n                  >\n                    <title>{pp}</title>\n                  </path>\n                )\n              })\n            }\n\n            return p.original.paths.map((pp, index) => {\n              const [cx1, cy1] = projectLine(s1.x, s1.y, t1.x, t1.y, 60 + index * 50)\n              const [cx2, cy2] = projectLine(s2.x, s2.y, t2.x, t2.y, 60 + index * 50)\n\n              const cpath = d3.path()\n              cpath.moveTo(x1, y1)\n              cpath.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2)\n              return (\n                <path\n                  key={`${cpath.toString()}-${index}`}\n                  d={cpath}\n                  strokeWidth={linkThickness}\n                  stroke={colors[pp]}\n                  fill=\"none\"\n                  onClick={() => onFeatureClick(p.original)}\n                >\n                  <title>{pp}</title>\n                </path>\n              )\n            })\n          } else {\n            const { source: s1, target: t1 } = nodePositionMap[p.original.source]\n            const { source: s2, target: t2 } = nodePositionMap[p.original.target]\n            const m1 = (y2 - y1) / (x2 - x1)\n            const m2 = (s1.y - t1.y) / (s1.x - t1.x)\n            const m3 = (s2.y - t2.y) / (s2.x - t2.x)\n            const line = d3.line().context(null)\n            const xRot = 90\n            const sweep = 0 // 1 or 0\n            const largeArc = 1\n            const drx = -30\n            const dry = -20\n            const path =\n              p.original.loop && !(m1 - m2 < 0.5 || m1 - m3 < 0.5)\n                ? `M${x1},${y1}A${drx},${dry} ${xRot},${largeArc},${sweep} ${x2},${y2}`\n                : line(p.links)\n\n            return (\n              <path\n                key={`${path.toString()}-${j}`}\n                d={path}\n                strokeWidth={linkThickness}\n                stroke=\"black\"\n                fill=\"none\"\n                onClick={() => onFeatureClick(p.original)}\n              />\n            )\n          }\n        })}\n\n        {paths.map((p, i) => {\n          const line = d3.line().context(null)\n          const path = line(p.links)\n          const t1 = p.links[0]\n          const s1 = p.links[1]\n          const t2 = p.links[p.links.length - 1]\n          const s2 = p.links[p.links.length - 2]\n          const [cx1, cy1] = projectLine(s1[0], s1[1], t1[0], t1[1], 100)\n          const [cx2, cy2] = projectLine(s2[0], s2[1], t2[0], t2[1], 100)\n          const invisibleTextPath = line([[cx1, cy1], ...p.links, [cx2, cy2]])\n          const stroke = color.startsWith('Just')\n            ? color.replace('Just', '').toLowerCase()\n            : d3.hsl(d3[`interpolate${color}`](i / paths.length)).darker()\n          return (\n            <React.Fragment key={`${path}_${i}`}>\n              <path\n                id={p.original.id}\n                d={path}\n                strokeWidth={sequenceThickness}\n                stroke={stroke}\n                fill=\"none\"\n                onClick={() => onFeatureClick(p.original)}\n              >\n                <title>{p.original.id}</title>\n              </path>\n              {drawLabels ? (\n                <>\n                  <path\n                    id={`${p.original.id}_invisible`}\n                    d={invisibleTextPath}\n                    fill=\"none\"\n                  />\n                  <text dy={12}>\n                    <textPath\n                      startOffset=\"50%\"\n                      textAnchor=\"middle\"\n                      href={`#${p.original.id}_invisible`}\n                    >\n                      {p.original.id}\n                    </textPath>\n                  </text>\n                </>\n              ) : null}\n            </React.Fragment>\n          )\n        })}\n      </g>\n    </svg>\n  )\n})\nexport { Graph }\n","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nexport function Sidebar({ onDrawLabels, onColorChange, onPathDraw, onRedraw, color }) {\n  return (\n    <div>\n      <p>Settings</p>\n      <Form.Label>Color</Form.Label>\n      <Form.Control\n        value={color}\n        onChange={event => onColorChange(event.target.value)}\n        as=\"select\"\n      >\n        <option>JustGrey</option>\n        <option>Turbo</option>\n        <option>Rainbow</option>\n        <option>Spectral</option>\n        <option>Viridis</option>\n        <option>RdYlBu</option>\n      </Form.Control>\n      <br />\n      <Form.Group\n        onChange={event => {\n          onPathDraw(event.target.checked)\n        }}\n      >\n        <Form.Check type=\"checkbox\" label=\"Draw paths\" />\n      </Form.Group>\n      <br />\n      <Form.Group\n        onChange={event => {\n          onDrawLabels(event.target.checked)\n        }}\n      >\n        <Form.Check type=\"checkbox\" label=\"Draw labels\" />\n      </Form.Group>\n      <br />\n      <Button onClick={() => onRedraw()}>Redraw</Button>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap'\n\nexport function SettingsDialog({ onHide, settings: paramSettings, onSettings }) {\n  const [settings, setSettings] = useState(paramSettings)\n  const {\n    chunkSize,\n    forceSteps,\n    linkSteps,\n    strengthCenter,\n    strengthXY,\n    forceType,\n    theta,\n    sequenceThickness,\n    linkThickness,\n  } = settings\n  return (\n    <Modal show={true} onHide={onHide} size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>Settings</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={event => {\n            event.preventDefault()\n            onSettings({\n              ...settings,\n              chunkSize: +chunkSize,\n              forceType: forceType,\n              forceSteps: +forceSteps,\n              linkSteps: +linkSteps,\n              strengthCenter: +strengthCenter,\n              theta: +theta,\n              sequenceThickness: +sequenceThickness,\n              linkThickness: +linkThickness,\n            })\n            onHide()\n          }}\n        >\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Number of simulation steps for the nodes\n              <Form.Text muted>Used in the force-based layout simulation</Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={forceSteps}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    forceSteps: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Number of simulation steps for the links\n              <Form.Text muted>\n                Increases the rigidity of the link based constraints\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={linkSteps}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    linkSteps: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Sequence chunk size\n              <Form.Text muted>\n                If a contig is of length 5000, then chunk length 1000 would become 5\n                segments. Note that contigs smaller than the chunk length may not be\n                proportionally sized\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={chunkSize}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    chunkSize: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Theta\n              <Form.Text muted>Parameter for the force directed layout</Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={theta}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    theta: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Strength (force xy)\n              <Form.Text muted>\n                This parameter should be between [0,1], applies to the XY layout\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={strengthXY}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    strengthXY: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Strength (particle charge)\n              <Form.Text muted>\n                This value is like a charged particle force, by being negative it keeps\n                things farther apart\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={strengthCenter}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    strengthCenter: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Force type\n              <Form.Text muted>\n                Force XY results in a circular style layout that can be helpful for more\n                disjoint graphs, force center is default\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                value={forceType}\n                onChange={event =>\n                  setSettings(settings => ({\n                    ...settings,\n                    forceType: event.target.value,\n                  }))\n                }\n                as=\"select\"\n              >\n                <option>center</option>\n                <option>xy</option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Sequence thickness\n            </Form.Label>\n            <Col>\n              <input\n                type=\"range\"\n                min={1}\n                max={100}\n                style={{ width: '100%' }}\n                value={sequenceThickness}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    sequenceThickness: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Link thickness\n            </Form.Label>\n            <Col>\n              <input\n                type=\"range\"\n                min={1}\n                max={100}\n                style={{ width: '100%' }}\n                value={linkThickness}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    linkThickness: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { Button, Form, Modal, Navbar, Nav, NavDropdown } from 'react-bootstrap'\nimport { SettingsDialog } from './SettingsDialog'\n\nfunction AboutDialog({ onHide }) {\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>graphgenome browser</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>\n          This is a small demo of browsing simple graph genomes. The app can read GFA\n          format URLs and local files, all processing is done client side currently.\n        </p>\n        <p>\n          Contact <a href=\"mainto:colin.diesh@gmail.com\">Colin Diesh</a>\n        </p>\n        <p>\n          Thanks to the BCC2020 pangenome team, and{' '}\n          <a href=\"https://github.com/rrwick/Bandage\">Bandage</a> for inspiration.\n        </p>\n        <p>\n          Sample data from GFA-spec repo (MT.gfa), Andrea Guarracino (path example), and\n          gfalint (Shaun Jackman)\n        </p>\n        <p>\n          This app attempts to support GFA2 but probably does not properly render the\n          intricacies of the edge spec\n        </p>\n        <a href=\"https://github.com/cmdcolin/graphgenomeviewer\">GitHub</a>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction OpenURLDialog({ onHide, onData }) {\n  const [value, setValue] = useState()\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>graphgenome browser</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={() => {\n            onData(value)\n            onHide()\n          }}\n        >\n          <Form.Group>\n            <Form.Label>Enter URL</Form.Label>\n            <Form.Control\n              type=\"input\"\n              value={value}\n              onChange={event => setValue(event.target.value)}\n            />\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction OpenFileDialog({ onHide, onGraph }) {\n  const ref = useRef()\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>Open file</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={async event => {\n            event.preventDefault()\n            const data = await ref.current.files[0].text()\n            onGraph(data)\n            onHide()\n          }}\n        >\n          <Form.Group>\n            <Form.Label>Open file</Form.Label>\n            <Form.Control ref={ref} type=\"file\" />\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport function Header({ onData, settings, onGraph, onExportSVG, onSettings }) {\n  const [showAbout, setShowAbout] = useState()\n  const [showSettings, setShowSettings] = useState()\n  const [showOpenURL, setShowOpenURL] = useState()\n  const [showOpenFile, setShowOpenFile] = useState()\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">graphgenome browser</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavDropdown title=\"File\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item onClick={() => setShowOpenURL(true)}>\n                Open URL\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => setShowOpenFile(true)}>\n                Open file\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onExportSVG()}>\n                Export SVG\n              </NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown title=\"Examples\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item onClick={() => onData('MT.gfa')}>\n                MT GFA-spec example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('toy_pangenome.gfa')}>\n                Paths example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('example1.gfa')}>\n                Paths example 2\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('big1.gfa')}>Big1</NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('ir1.gfa')}>Ir1</NavDropdown.Item>\n              <NavDropdown.Item\n                onClick={() => onData('test_contig_placement_assembly_graph.gfa')}\n              >\n                Unicycler example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('circle.gfa')}>\n                Simple circle\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('example1.gfa2')}>\n                GFA2.0 example\n              </NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link\n              onClick={() => {\n                setShowSettings(true)\n              }}\n            >\n              Settings\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => {\n                setShowAbout(true)\n              }}\n            >\n              About\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      {showAbout ? <AboutDialog onHide={() => setShowAbout(false)} /> : null}\n      {showSettings ? (\n        <SettingsDialog\n          settings={settings}\n          onHide={() => setShowSettings(false)}\n          onSettings={onSettings}\n        />\n      ) : null}\n      {showOpenURL ? (\n        <OpenURLDialog onData={onData} onHide={() => setShowOpenURL(false)} />\n      ) : null}\n      {showOpenFile ? (\n        <OpenFileDialog onGraph={onGraph} onHide={() => setShowOpenFile(false)} />\n      ) : null}\n    </>\n  )\n}\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { FeatureDialog } from './FeatureDialog'\nimport { Graph } from './Graph'\nimport { Sidebar } from './Sidebar'\nimport { Header } from './Header'\nimport { parseGFA } from './util'\nimport { serialize } from './util'\nimport saveAs from 'file-saver'\nimport { useQueryParams, StringParam, NumberParam, withDefault } from 'use-query-params'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nfunction App() {\n  const [featureData, setFeatureData] = useState()\n  const [data, setData] = useState()\n  const [error, setError] = useState()\n  const [color, setColor] = useState('Rainbow')\n  const [, updateState] = useState()\n  const forceUpdate = React.useCallback(() => updateState({}), [])\n  const [pathDraw, setPathDraw] = useState(false)\n  const [redraw, setRedraw] = useState(0)\n  const [drawLabels, setDrawLabels] = useState(false)\n  const [query, setQuery] = useQueryParams({\n    strengthCenter: withDefault(NumberParam, -50),\n    strengthXY: withDefault(NumberParam, 0.1),\n    chunkSize: withDefault(NumberParam, 1000),\n    forceSteps: withDefault(NumberParam, 200),\n    linkSteps: withDefault(NumberParam, 1),\n    sequenceThickness: withDefault(NumberParam, 10),\n    linkThickness: withDefault(NumberParam, 2),\n    theta: withDefault(NumberParam, 0.9),\n    forceType: withDefault(StringParam, 'center'),\n    dataset: withDefault(StringParam, 'MT.gfa'),\n  })\n\n  const { dataset, ...settings } = query\n\n  const ref = useRef()\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const result = await fetch(dataset)\n        if (!result.ok) {\n          throw new Error(`Failed to fetch ${result.statusText}`)\n        }\n        const text = await result.text()\n        setData(text)\n        setError(undefined)\n      } catch (e) {\n        console.error(e)\n        setError(e.message)\n      }\n    })()\n  }, [dataset])\n\n  const graph = useMemo(() => {\n    return data ? parseGFA(data) : undefined\n  }, [data])\n\n  return (\n    <div>\n      <Header\n        onData={d => {\n          setQuery({ dataset: d, ...settings })\n          forceUpdate()\n        }}\n        onGraph={d => {\n          setData(d)\n        }}\n        onSettings={d => {\n          setQuery({ ...d, dataset })\n          forceUpdate()\n        }}\n        onExportSVG={() => {\n          saveAs(serialize(ref.current))\n        }}\n        settings={settings}\n      />\n      {featureData ? (\n        <FeatureDialog\n          data={featureData}\n          onModal={data => {\n            setFeatureData(data)\n          }}\n          onHide={() => {\n            setFeatureData(undefined)\n          }}\n        />\n      ) : null}\n      <div className=\"flexcontainer\">\n        <div id=\"sidebar\" className=\"sidebar\">\n          <Sidebar\n            color={color}\n            onColorChange={c => setColor(c)}\n            onDrawLabels={v => setDrawLabels(v)}\n            onPathDraw={d => setPathDraw(d)}\n            onRedraw={() => setRedraw(redraw => redraw + 1)}\n          />\n        </div>\n        <div className=\"body\">\n          {error ? <div style={{ color: 'red' }}>{error}</div> : null}\n          {graph ? (\n            <Graph\n              graph={graph}\n              ref={ref}\n              color={color}\n              redraw={redraw}\n              drawLabels={drawLabels}\n              drawPaths={pathDraw}\n              onFeatureClick={data => {\n                setFeatureData(data)\n              }}\n              settings={settings}\n            />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { QueryParamProvider } from 'use-query-params'\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryParamProvider>\n      <App />\n    </QueryParamProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}