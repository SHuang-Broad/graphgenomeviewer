{"version":3,"sources":["FeatureDialog.js","../../lib/dist/util.js","../../lib/dist/index.js","Sidebar.js","SettingsDialog.js","Header.js","util.js","App.js","index.js"],"names":["FeatureDialog","data","onHide","Modal","show","Header","closeButton","Title","Body","Object","entries","filter","entry","includes","map","key","value","style","display","maxHeight","margin","backgroundColor","minWidth","wordBreak","overflow","String","tags","keys","length","Footer","Button","variant","onClick","makePath","edges","path","i","st","push","source","x","y","last","target","generatePaths","graph","reduce","rv","v","Function","undefined","el","find","r","values","links","original","projectLine","x1","y1","x2","y2","dt","d","Math","sqrt","schemeCategory10","d3interpolate","Path","drawLabels","sequenceThickness","stroke","onFeatureClick","line","d3shape","context","t1","s1","t2","s2","cx1","cy1","cx2","cy2","invisibleTextPath","React","createElement","Fragment","id","strokeWidth","fill","dy","startOffset","textAnchor","href","Graph","forwardRef","props","ref","gref","useRef","drawPaths","drag","settings","chunkSize","forceSteps","linkSteps","linkThickness","theta","forceType","strengthCenter","strengthXY","color","width","height","redraw","console","log","zoom","d3zoom","extent","scaleExtent","useMemo","G","Gp","nodes","seen","paths","pathNodes","split","j","curr","name","sequence","rest","linkNum","concat","strand1","strand2","loop","link","reprocessGraph","colors","fromEntries","p","create","random","simulation","forceSimulation","force","forceLink","distance","iterations","forceManyBody","strength","forceCenter","forceX","forceY","tick","useEffect","svg","select","current","call","on","event","attr","transform","result","generateEdges","nodePathMap","l","fontSize","viewBox","toString","m1","m2","m3","abs","pp","index","dx","dr","sweep","cpath","moveTo","bezierCurveTo","startsWith","replace","toLowerCase","hsl","darker","Sidebar","onDrawLabels","onDrag","onColorChange","onPathDraw","onRedraw","colorScheme","Form","Label","Control","onChange","as","Group","Check","checked","type","label","SettingsDialog","paramSettings","onSettings","useState","setSettings","size","onSubmit","preventDefault","Row","column","sm","Text","muted","Col","val","min","max","AboutDialog","pkg","version","OpenURLDialog","onData","setValue","OpenFileDialog","onGraph","a","files","text","onExportSVG","showAbout","setShowAbout","showSettings","setShowSettings","showOpenURL","setShowOpenURL","showOpenFile","setShowOpenFile","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","title","Item","Link","parseTag","tag","App","featureData","setFeatureData","setData","error","setError","updateState","forceUpdate","useCallback","setRedraw","useQueryParams","withDefault","NumberParam","StringParam","dataset","BooleanParam","query","setQuery","fetch","ok","Error","statusText","message","file","header","headerLine","forEach","len","seq","tagfields","gfa1","slice","LN","cigar","source1","target1","charAt","parseGFA","saveAs","xmlns","cloneNode","fragment","window","location","walker","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","attributes","setAttributeNS","string","XMLSerializer","serializeToString","Blob","serialize","onModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f769c448.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\n\nexport function FeatureDialog({ data, onHide }) {\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>Feature details</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <div>Attributes</div>\n        {Object.entries(data)\n          .filter(entry => !['source', 'target', 'linkNum', 'tags'].includes(entry[0]))\n          .map(([key, value]) => (\n            <div\n              key={`${key}_${value}`}\n              style={{ display: 'flex', maxHeight: 150, margin: 3 }}\n            >\n              <div style={{ backgroundColor: '#dda', minWidth: 100 }}>{key}</div>\n              <div style={{ wordBreak: 'break-word', overflow: 'auto' }}>\n                {String(value)}\n              </div>\n            </div>\n          ))}\n        <hr />\n        {data.tags && Object.keys(data.tags).length ? (\n          <>\n            <div>Tags</div>\n            {Object.entries(data.tags).map(([key, value]) => (\n              <div\n                key={`${key}_${value}`}\n                style={{ display: 'flex', maxHeight: 150, margin: 3 }}\n              >\n                <div style={{ backgroundColor: '#dda', minWidth: 100 }}>{key}</div>\n                <div style={{ wordBreak: 'break-word', overflow: 'auto' }}>\n                  {String(value)}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onHide}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","// Given a GFA graph with sequence nodes ('S' tags), it breaks the S tags into\n// multiple nodes depending on how long the sequence is, which gives the graph\n// an organic look when the layout algorithm is applied\nexport function reprocessGraph(G, chunkSize) {\n  const Gp = {\n    nodes: [],\n    links: []\n  };\n  const seen = {};\n\n  for (let i = 0; i < (G.paths || {}).length; i++) {\n    const path = G.paths[i];\n    const pathNodes = path.path.split(',');\n\n    for (let j = 0; j < pathNodes.length - 1; j++) {\n      const curr = `${pathNodes[j]}_${pathNodes[j + 1]}`;\n\n      if (!seen[curr]) {\n        seen[curr] = [path.name];\n      } else {\n        seen[curr].push(path.name);\n      }\n    }\n  }\n\n  for (let i = 0; i < G.nodes.length; i++) {\n    const {\n      id,\n      sequence,\n      length,\n      ...rest\n    } = G.nodes[i];\n    const nodes = []; // break long sequence into multiple nodes, for organic layout\n\n    nodes.push({ ...rest,\n      id: `${id}-start`\n    });\n\n    for (let i = chunkSize; i < length - chunkSize; i += chunkSize) {\n      nodes.push({ ...rest,\n        id: `${id}-${i}`\n      });\n    }\n\n    nodes.push({ ...rest,\n      id: `${id}-end`\n    }); // recreate links\n\n    for (let j = 0; j < nodes.length - 1; j++) {\n      const source = nodes[j].id;\n      const target = nodes[j + 1].id;\n      Gp.links.push({ ...rest,\n        source,\n        target,\n        id,\n        length,\n        sequence,\n        linkNum: i\n      });\n    }\n\n    Gp.nodes = Gp.nodes.concat(nodes);\n  }\n\n  for (let i = 0; i < G.links.length; i++) {\n    const {\n      strand1,\n      strand2,\n      source,\n      target,\n      ...rest\n    } = G.links[i];\n    const paths = seen[`${source}${strand1}_${target}${strand2}`] || [];\n    const loop = source === target; // enumerates cases for which end of source connects to\n    // which end of the target\n\n    const link = {\n      source: `${source}-${strand1 === '+' ? 'end' : 'start'}`,\n      target: `${target}-${strand2 === '+' ? 'start' : 'end'}`,\n      ...rest\n    };\n\n    if (loop) {\n      link.loop = true;\n    }\n\n    if (paths.length) {\n      link.paths = paths;\n    }\n\n    Gp.links.push(link);\n  }\n\n  return Gp;\n} // source https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\n// returns an array that contains groupings of xs by attribute key\n\nfunction groupByArray(xs, key) {\n  return xs.reduce(function (rv, x) {\n    const v = key instanceof Function ? key(x) : x[key];\n\n    if (v !== undefined) {\n      const el = rv.find(r => r && r.key === v);\n\n      if (el) {\n        el.values.push(x);\n      } else {\n        rv.push({\n          key: v,\n          values: [x]\n        });\n      }\n    }\n\n    return rv;\n  }, []);\n} // connects successive start->end to a path\n// param edges: {source:{x,y}, target:{x,y}}[]\n\n\nfunction makePath(edges) {\n  const path = [];\n  let i = 0;\n\n  for (; i < edges.length; i++) {\n    const st = edges[i];\n    path.push([st.source.x, st.source.y]);\n  }\n\n  const last = edges[i - 1];\n  path.push([last.target.x, last.target.y]);\n  return path;\n} // groups the edges data structure by the linkNum attribute\n\n\nexport function generatePaths(edges, graph) {\n  const ret = groupByArray(edges, 'linkNum');\n  return ret.map(entry => ({\n    links: makePath(entry.values),\n    original: graph[entry.key]\n  }));\n}\nexport function generateEdges(links, graph) {\n  const result = [];\n\n  for (let i = 0; i < links.length; i++) {\n    const link = links[i];\n    const original = graph[i];\n\n    if (!original.id) {\n      result.push({\n        links: [[link.source.x, link.source.y], [link.target.x, link.target.y]],\n        original\n      });\n    }\n  }\n\n  return result;\n} // implements this algorithm to project a point \"forwards\" from a given contig\n// node translation of simple vector math here\n// https://math.stackexchange.com/questions/175896\n\nexport function projectLine(x1, y1, x2, y2, dt) {\n  const d = Math.sqrt((y2 - y1) ** 2 + (x2 - x1) ** 2);\n  const vx = (x2 - x1) / d;\n  const vy = (y2 - y1) / d;\n  return [x2 + dt * vx, y2 + dt * vy];\n}","import React, { useMemo, useRef, useEffect } from 'react';\nimport { hsl } from 'd3-color';\nimport { path } from 'd3-path';\nimport { select } from 'd3-selection';\nimport { forceManyBody, forceLink, forceSimulation, forceCenter, forceX, forceY } from 'd3-force';\nimport * as d3interpolate from 'd3-scale-chromatic';\nimport { zoom as d3zoom } from 'd3-zoom';\nimport * as d3shape from 'd3-shape';\nimport { projectLine, reprocessGraph, generatePaths, generateEdges } from './util';\nconst {\n  schemeCategory10\n} = d3interpolate;\nconst Graph = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const gref = useRef();\n  const {\n    graph,\n    drawPaths = false,\n    drawLabels = false,\n    drag = false,\n    settings: {\n      chunkSize = 1000,\n      forceSteps = 500,\n      linkSteps = 3,\n      sequenceThickness = 10,\n      linkThickness = 2,\n      theta = 0.9,\n      forceType = 'center',\n      strengthCenter = -50,\n      strengthXY = 0.3\n    },\n    color = 'Rainbow',\n    width = 2000,\n    height = 1000,\n    redraw = 0,\n    onFeatureClick = () => {\n      console.log('no feature click configured');\n    }\n  } = props;\n  const zoom = useRef(d3zoom().extent([[0, 0], [width, height]]).scaleExtent([0.1, 8]));\n  const data = useMemo(() => {\n    return reprocessGraph(graph, chunkSize);\n  }, [chunkSize, graph]);\n  const colors = useMemo(() => {\n    return Object.fromEntries((graph.paths || []).map((p, i) => {\n      return [p.name, schemeCategory10[i]];\n    }));\n  }, [graph.paths]);\n  const links = useMemo(() => {\n    const links = data.links.map(d => Object.create({ ...d,\n      x: Math.random(),\n      y: Math.random()\n    }));\n    const nodes = data.nodes.map(d => Object.create({ ...d,\n      x: Math.random(),\n      y: Math.random()\n    }));\n    const simulation = forceSimulation(nodes).force('link', forceLink(links).id(d => d.id).distance(link => {\n      return link.sequence ? 1 : 10;\n    }).iterations(linkSteps)).force('charge', forceManyBody().strength(strengthCenter).theta(theta));\n\n    if (forceType === 'center') {\n      simulation.force('center', forceCenter(width / 3, height / 3));\n    } else if (forceType === 'xy') {\n      simulation.force('x', forceX().x(width / 3).strength(strengthXY)).force('y', forceY().y(height / 3).strength(strengthXY));\n    }\n\n    for (let i = 0; i < forceSteps; ++i) {\n      simulation.tick();\n    } // used for redrawing\n    // eslint-disable-next-line no-unused-vars\n\n\n    const m = redraw;\n    return links;\n  }, [data.links, data.nodes, linkSteps, strengthCenter, theta, forceType, redraw, width, height, strengthXY, forceSteps]);\n  useEffect(() => {\n    // zoom logic, similar to https://observablehq.com/@d3/zoom\n    // toggling logic from https://stackoverflow.com/a/29762389/2129219\n    const svg = select(ref.current);\n\n    if (drag) {\n      svg.call(zoom.current.on('zoom', event => {\n        select(gref.current).attr('transform', event.transform);\n      }));\n    } else {\n      svg.on('.zoom', null);\n    }\n  }, [drag, height, ref, width, zoom]);\n  const paths = generatePaths(links, graph.nodes);\n  const edges = generateEdges(links, data.links);\n  const nodePathMap = {};\n\n  for (let i = 0; i < paths.length; i++) {\n    const p = paths[i];\n    const l = p.links.length;\n    nodePathMap[`${p.original.id}-start`] = [p.links[1], p.links[0]];\n    nodePathMap[`${p.original.id}-end`] = [p.links[l - 2], p.links[l - 1]];\n  }\n\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"100%\",\n    height: \"100%\",\n    ref: ref,\n    style: {\n      fontSize: 10\n    },\n    viewBox: [0, 0, width, height].toString()\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    ref: gref\n  }, edges.map((p, j) => {\n    const x1 = p.links[0][0];\n    const y1 = p.links[0][1];\n    const x2 = p.links[1][0];\n    const y2 = p.links[1][1];\n\n    if (drawPaths) {\n      const [s1, t1] = nodePathMap[p.original.source];\n      const [s2, t2] = nodePathMap[p.original.target];\n      const m1 = (y2 - y1) / (x2 - x1);\n      const m2 = (s1[1] - t1[1]) / (s1[0] - t1[0]);\n      const m3 = (s2[1] - t2[1]) / (s2[0] - t2[0]);\n\n      if (Math.abs(m1 - m2) < 0.2 || Math.abs(m1 - m3) < 0.2) {\n        return p.original.paths ? p.original.paths.map((pp, index) => {\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const dr = Math.sqrt(dx * dx + dy * dy) + Math.random() * 40;\n          const sweep = index % 2;\n          const cpath = `M${x1},${y1}A${dr},${dr} 0 0,${sweep} ${x2},${y2}`;\n          return /*#__PURE__*/React.createElement(\"path\", {\n            key: `${cpath}-${index}`,\n            d: cpath,\n            strokeWidth: linkThickness,\n            stroke: colors[pp],\n            fill: \"none\",\n            onClick: () => onFeatureClick(p.original)\n          }, /*#__PURE__*/React.createElement(\"title\", null, pp));\n        }) : null;\n      }\n\n      return p.original.paths ? p.original.paths.map((pp, index) => {\n        const [cx1, cy1] = projectLine(s1[0], s1[1], t1[0], t1[1], 60 + index * 30);\n        const [cx2, cy2] = projectLine(s2[0], s2[1], t2[0], t2[1], 60 + index * 30);\n        const cpath = path();\n        cpath.moveTo(x1, y1);\n        cpath.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n        return /*#__PURE__*/React.createElement(\"path\", {\n          key: `${cpath.toString()}-${index}`,\n          d: cpath,\n          strokeWidth: linkThickness,\n          stroke: colors[pp],\n          fill: \"none\",\n          onClick: () => onFeatureClick(p.original)\n        }, /*#__PURE__*/React.createElement(\"title\", null, pp));\n      }) : null;\n    } else {\n      const [s1, t1] = nodePathMap[p.original.source];\n      const [s2, t2] = nodePathMap[p.original.target];\n      const m1 = (y2 - y1) / (x2 - x1);\n      const m2 = (s1[1] - t1[1]) / (s1[0] - t1[0]);\n      const m3 = (s2[1] - t2[1]) / (s2[0] - t2[0]);\n      const line = d3shape.line().context(null);\n      const xRot = 90;\n      const sweep = 0; // 1 or 0\n\n      const largeArc = 1;\n      const drx = -30;\n      const dry = -20;\n      const path = p.original.loop && !(m1 - m2 < 0.5 || m1 - m3 < 0.5) ? `M${x1},${y1}A${drx},${dry} ${xRot},${largeArc},${sweep} ${x2},${y2}` : line(p.links);\n      return /*#__PURE__*/React.createElement(\"path\", {\n        key: `${path.toString()}-${j}`,\n        d: path,\n        strokeWidth: linkThickness,\n        stroke: \"black\",\n        fill: \"none\",\n        onClick: () => onFeatureClick(p.original)\n      });\n    }\n  }), paths.map((p, i) => {\n    const stroke = color.startsWith('Just') ? color.replace('Just', '').toLowerCase() : hsl(d3interpolate[`interpolate${color}`](i / paths.length)).darker();\n    return /*#__PURE__*/React.createElement(Path, {\n      key: p.original.id,\n      sequenceThickness: sequenceThickness,\n      drawLabels: drawLabels,\n      path: p,\n      stroke: stroke,\n      onFeatureClick: onFeatureClick\n    });\n  })));\n});\n\nfunction Path({\n  path,\n  drawLabels,\n  sequenceThickness,\n  stroke,\n  onFeatureClick\n}) {\n  const line = d3shape.line().context(null);\n  const t1 = path.links[0];\n  const s1 = path.links[1];\n  const t2 = path.links[path.links.length - 1];\n  const s2 = path.links[path.links.length - 2];\n  const [cx1, cy1] = projectLine(s1[0], s1[1], t1[0], t1[1], 100);\n  const [cx2, cy2] = projectLine(s2[0], s2[1], t2[0], t2[1], 100);\n  const invisibleTextPath = line([[cx1, cy1], ...path.links, [cx2, cy2]]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n    id: path.original.id,\n    d: line(path.links),\n    strokeWidth: sequenceThickness,\n    stroke: stroke,\n    fill: \"none\",\n    onClick: () => onFeatureClick(path.original)\n  }, /*#__PURE__*/React.createElement(\"title\", null, path.original.id)), drawLabels ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n    id: `${path.original.id}_invisible`,\n    d: invisibleTextPath,\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    dy: 12\n  }, /*#__PURE__*/React.createElement(\"textPath\", {\n    startOffset: \"50%\",\n    textAnchor: \"middle\",\n    href: `#${path.original.id}_invisible`\n  }, path.original.id))) : null);\n}\n\nexport default Graph;","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nexport function Sidebar({\n  onDrawLabels,\n  drawLabels,\n  drawPaths,\n  drag,\n  onDrag,\n  onColorChange,\n  onPathDraw,\n  onRedraw,\n  colorScheme,\n}) {\n  return (\n    <div>\n      <p>Settings</p>\n      <Form.Label>Color</Form.Label>\n      <Form.Control\n        value={colorScheme}\n        onChange={event => onColorChange(event.target.value)}\n        as=\"select\"\n      >\n        <option>JustGrey</option>\n        <option>Turbo</option>\n        <option>Rainbow</option>\n        <option>Spectral</option>\n        <option>Viridis</option>\n        <option>RdYlBu</option>\n      </Form.Control>\n      <br />\n      <Form.Group>\n        <Form.Check\n          onChange={event => {\n            onPathDraw(event.target.checked)\n          }}\n          type=\"checkbox\"\n          label=\"Draw paths\"\n          checked={drawPaths}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Check\n          onChange={event => {\n            onDrawLabels(event.target.checked)\n          }}\n          type=\"checkbox\"\n          label=\"Draw labels\"\n          checked={drawLabels}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Check\n          onChange={event => {\n            onDrag(event.target.checked)\n          }}\n          type=\"checkbox\"\n          label=\"Enable panning/zooming?\"\n          checked={drag}\n        />\n      </Form.Group>\n      <br />\n      <Button onClick={() => onRedraw()}>Redraw</Button>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap'\n\nexport function SettingsDialog({ onHide, settings: paramSettings, onSettings }) {\n  const [settings, setSettings] = useState(paramSettings)\n  const {\n    chunkSize,\n    forceSteps,\n    linkSteps,\n    strengthCenter,\n    strengthXY,\n    forceType,\n    theta,\n    sequenceThickness,\n    linkThickness,\n  } = settings\n  return (\n    <Modal show={true} onHide={onHide} size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>Settings</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={event => {\n            event.preventDefault()\n            onSettings({\n              ...settings,\n              chunkSize: +chunkSize,\n              forceType: forceType,\n              forceSteps: +forceSteps,\n              linkSteps: +linkSteps,\n              strengthCenter: +strengthCenter,\n              theta: +theta,\n              sequenceThickness: +sequenceThickness,\n              linkThickness: +linkThickness,\n            })\n            onHide()\n          }}\n        >\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Number of simulation steps for the nodes\n              <Form.Text muted>Used in the force-based layout simulation</Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={forceSteps}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    forceSteps: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Number of simulation steps for the links\n              <Form.Text muted>\n                Increases the rigidity of the link based constraints\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={linkSteps}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    linkSteps: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Sequence chunk size\n              <Form.Text muted>\n                If a contig is of length 5000, then chunk length 1000 would become 5\n                segments. Note that contigs smaller than the chunk length may not be\n                proportionally sized\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={chunkSize}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    chunkSize: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Theta\n              <Form.Text muted>Parameter for the force directed layout</Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={theta}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    theta: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Strength (force xy)\n              <Form.Text muted>\n                This parameter should be between [0,1], applies to the XY layout\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={strengthXY}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    strengthXY: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Strength (particle charge)\n              <Form.Text muted>\n                This value is like a charged particle force, by being negative it keeps\n                things farther apart\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={strengthCenter}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    strengthCenter: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Force type\n              <Form.Text muted>\n                Force XY results in a circular style layout that can be helpful for more\n                disjoint graphs, force center is default\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                value={forceType}\n                onChange={event =>\n                  setSettings(settings => ({\n                    ...settings,\n                    forceType: event.target.value,\n                  }))\n                }\n                as=\"select\"\n              >\n                <option>center</option>\n                <option>xy</option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Sequence thickness\n            </Form.Label>\n            <Col>\n              <input\n                type=\"range\"\n                min={1}\n                max={100}\n                style={{ width: '100%' }}\n                value={sequenceThickness}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    sequenceThickness: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Link thickness\n            </Form.Label>\n            <Col>\n              <input\n                type=\"range\"\n                min={1}\n                max={100}\n                style={{ width: '100%' }}\n                value={linkThickness}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    linkThickness: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { Button, Form, Modal, Navbar, Nav, NavDropdown } from 'react-bootstrap'\nimport { SettingsDialog } from './SettingsDialog'\nimport pkg from '../package.json'\n\nfunction AboutDialog({ onHide }) {\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>graphgenome browser {pkg.version}</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>\n          This is a small demo of browsing simple graph genomes. The app can\n          read GFA format URLs and local files, all processing is done client\n          side currently.\n        </p>\n        <p>\n          Contact <a href='mainto:colin.diesh@gmail.com'>Colin Diesh</a>\n        </p>\n        <p>\n          Thanks to the BCC2020 pangenome team, and{' '}\n          <a href='https://github.com/rrwick/Bandage'>Bandage</a> for\n          inspiration.\n        </p>\n        <p>\n          Sample data from GFA-spec repo (MT.gfa), Andrea Guarracino (path\n          example), and gfalint (Shaun Jackman)\n        </p>\n        <p>\n          This app attempts to support GFA2 but does not properly render\n          fragments, intricate edge details, or U and O paths\n        </p>\n        <a href='https://github.com/cmdcolin/graphgenomeviewer'>GitHub</a>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction OpenURLDialog({ onHide, onData }) {\n  const [value, setValue] = useState()\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>graphgenome browser</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={() => {\n            onData(value)\n            onHide()\n          }}\n        >\n          <Form.Group>\n            <Form.Label>Enter URL</Form.Label>\n            <Form.Control\n              type='input'\n              value={value}\n              onChange={(event) => setValue(event.target.value)}\n            />\n          </Form.Group>\n          <Button type='submit'>Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction OpenFileDialog({ onHide, onGraph }) {\n  const ref = useRef()\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>Open file</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={async (event) => {\n            event.preventDefault()\n            const data = await ref.current.files[0].text()\n            onGraph(data)\n            onHide()\n          }}\n        >\n          <Form.Group>\n            <Form.Label>Open file</Form.Label>\n            <Form.Control ref={ref} type='file' />\n          </Form.Group>\n          <Button type='submit'>Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport function Header({ onData, settings, onGraph, onExportSVG, onSettings }) {\n  const [showAbout, setShowAbout] = useState()\n  const [showSettings, setShowSettings] = useState()\n  const [showOpenURL, setShowOpenURL] = useState()\n  const [showOpenFile, setShowOpenFile] = useState()\n  return (\n    <>\n      <Navbar bg='light' expand='lg'>\n        <Navbar.Brand href='#home'>graphgenome browser</Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='mr-auto'>\n            <NavDropdown title='File' id='basic-nav-dropdown'>\n              <NavDropdown.Item onClick={() => setShowOpenURL(true)}>\n                Open URL\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => setShowOpenFile(true)}>\n                Open file\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onExportSVG()}>\n                Export SVG\n              </NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown title='Examples' id='basic-nav-dropdown'>\n              <NavDropdown.Item onClick={() => onData('MT.gfa')}>\n                MT GFA-spec example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('toy_pangenome.gfa')}>\n                Paths example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('example1.gfa')}>\n                Paths example 2\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('big1.gfa')}>\n                Big1\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('ir1.gfa')}>\n                Ir1\n              </NavDropdown.Item>\n              <NavDropdown.Item\n                onClick={() =>\n                  onData('test_contig_placement_assembly_graph.gfa')\n                }\n              >\n                Unicycler example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('circle.gfa')}>\n                Simple circle\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('example1.gfa2')}>\n                GFA2.0 example\n              </NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link\n              onClick={() => {\n                setShowSettings(true)\n              }}\n            >\n              Settings\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => {\n                setShowAbout(true)\n              }}\n            >\n              About\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      {showAbout ? <AboutDialog onHide={() => setShowAbout(false)} /> : null}\n      {showSettings ? (\n        <SettingsDialog\n          settings={settings}\n          onHide={() => setShowSettings(false)}\n          onSettings={onSettings}\n        />\n      ) : null}\n      {showOpenURL ? (\n        <OpenURLDialog onData={onData} onHide={() => setShowOpenURL(false)} />\n      ) : null}\n      {showOpenFile ? (\n        <OpenFileDialog\n          onGraph={onGraph}\n          onHide={() => setShowOpenFile(false)}\n        />\n      ) : null}\n    </>\n  )\n}\n","// adapted from https://observablehq.com/@mbostock/saving-svg\nexport function serialize(svg) {\n  const xmlns = 'http://www.w3.org/2000/xmlns/'\n  const xlinkns = 'http://www.w3.org/1999/xlink'\n  const svgns = 'http://www.w3.org/2000/svg'\n\n  svg = svg.cloneNode(true)\n  const fragment = `${window.location.href}#`\n  const walker = document.createTreeWalker(\n    svg,\n    NodeFilter.SHOW_ELEMENT,\n    null,\n    false\n  )\n  while (walker.nextNode()) {\n    for (const attr of walker.currentNode.attributes) {\n      if (attr.value.includes(fragment)) {\n        attr.value = attr.value.replace(fragment, '#')\n      }\n    }\n  }\n  svg.setAttributeNS(xmlns, 'xmlns', svgns)\n  svg.setAttributeNS(xmlns, 'xmlns:xlink', xlinkns)\n  const serializer = new window.XMLSerializer()\n  const string = serializer.serializeToString(svg)\n  return new Blob([string], { type: 'image/svg+xml' })\n}\n\nfunction parseTag(tag, tags) {\n  const [name, type, val] = tag.split(':')\n  if (type === 'i') {\n    tags[name] = +val\n  } else if (type === 'Z') {\n    tags[name] = val\n  }\n}\n\nexport function parseGFA(file) {\n  const graph = { nodes: [], links: [], paths: [], header: [] }\n  for (const line of file.split('\\n')) {\n    if (line.startsWith('H')) {\n      const headerLine = {}\n      const [, ...rest] = line.split('\\t')\n      rest.forEach((tag) => parseTag(tag, headerLine))\n      graph.header.push(headerLine)\n    }\n    if (line.startsWith('S')) {\n      const [, name, ...rest] = line.split('\\t')\n      let len = 0\n      let seq = ''\n      let tagfields\n      let gfa1 = false\n      if (+rest[0]) {\n        len = +rest[0]\n        seq = rest[1]\n        tagfields = rest.slice(2)\n      } else {\n        gfa1 = true\n        seq = rest[0]\n        len = seq.length\n        tagfields = rest.slice(1)\n      }\n      const tags = {}\n      for (let i = 0; i < tagfields.length; i++) {\n        parseTag(rest[i], tags)\n      }\n      if (gfa1 && tags.LN) {\n        len = tags.LN\n      }\n      graph.nodes.push({ id: name, length: len, sequence: seq, tags })\n    } else if (line.startsWith('E')) {\n      // eslint-disable-next-line no-unused-vars\n      const [, , source, target, , , , , cigar, ...rest] = line.split('\\t')\n      const source1 = source.slice(0, -1)\n      const target1 = target.slice(0, -1)\n      const strand1 = source.charAt(source.length - 1)\n      const strand2 = source.charAt(target.length - 1)\n      const tags = {}\n      for (let i = 0; i < rest.length; i++) {\n        parseTag(rest[i], tags)\n      }\n\n      graph.links.push({\n        source: source1,\n        target: target1,\n        strand1,\n        strand2,\n        cigar,\n        tags\n      })\n    } else if (line.startsWith('L')) {\n      const [, source, strand1, target, strand2, cigar, ...rest] = line.split(\n        '\\t'\n      )\n      const tags = {}\n      for (let i = 0; i < rest.length; i++) {\n        parseTag(rest[i], tags)\n      }\n      graph.links.push({ source, target, strand1, strand2, cigar, tags })\n    } else if (line.startsWith('P')) {\n      const [, name, path, ...rest] = line.split('\\t')\n\n      graph.paths.push({ name, path, rest })\n    }\n  }\n  return graph\n}\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { FeatureDialog } from './FeatureDialog'\nimport Graph from 'graphgenomeviewer'\nimport { Sidebar } from './Sidebar'\nimport { Header } from './Header'\nimport { parseGFA, serialize } from './util'\nimport saveAs from 'file-saver'\nimport {\n  useQueryParams,\n  BooleanParam,\n  StringParam,\n  NumberParam,\n  withDefault\n} from 'use-query-params'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nfunction App() {\n  const [featureData, setFeatureData] = useState()\n  const [data, setData] = useState()\n  const [error, setError] = useState()\n  const [, updateState] = useState()\n  const forceUpdate = React.useCallback(() => updateState({}), [])\n  const [redraw, setRedraw] = useState(0)\n  const [query, setQuery] = useQueryParams({\n    strengthCenter: withDefault(NumberParam, -50),\n    strengthXY: withDefault(NumberParam, 0.1),\n    chunkSize: withDefault(NumberParam, 1000),\n    forceSteps: withDefault(NumberParam, 200),\n    linkSteps: withDefault(NumberParam, 1),\n    sequenceThickness: withDefault(NumberParam, 10),\n    linkThickness: withDefault(NumberParam, 2),\n    theta: withDefault(NumberParam, 0.9),\n    forceType: withDefault(StringParam, 'center'),\n    dataset: withDefault(StringParam, 'MT.gfa'),\n    colorScheme: withDefault(StringParam, 'Rainbow'),\n    drawLabels: withDefault(BooleanParam, false),\n    drawPaths: withDefault(BooleanParam, false),\n    drag: withDefault(BooleanParam, true)\n  })\n\n  const {\n    dataset,\n    drawLabels,\n    drawPaths,\n    colorScheme,\n    drag,\n    ...settings\n  } = query\n\n  const ref = useRef()\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const result = await fetch(dataset)\n        if (!result.ok) {\n          throw new Error(`Failed to fetch ${result.statusText}`)\n        }\n        const text = await result.text()\n        setData(text)\n        setError(undefined)\n      } catch (e) {\n        console.error(e)\n        setError(e.message)\n      }\n    })()\n  }, [dataset])\n\n  const graph = useMemo(() => {\n    return data ? parseGFA(data) : undefined\n  }, [data])\n\n  return (\n    <div>\n      <Header\n        onData={(value) => {\n          setQuery({ dataset: value })\n          forceUpdate()\n        }}\n        onGraph={(graph) => {\n          setData(graph)\n        }}\n        onSettings={(settings) => {\n          setQuery(settings)\n          forceUpdate()\n        }}\n        onExportSVG={() => {\n          saveAs(serialize(ref.current))\n        }}\n        settings={settings}\n      />\n      {featureData ? (\n        <FeatureDialog\n          data={featureData}\n          onModal={(data) => {\n            setFeatureData(data)\n          }}\n          onHide={() => {\n            setFeatureData(undefined)\n          }}\n        />\n      ) : null}\n      <div className='flexcontainer'>\n        <div id='sidebar' className='sidebar'>\n          <Sidebar\n            colorScheme={colorScheme}\n            drawPaths={drawPaths}\n            drawLabels={drawLabels}\n            drag={drag}\n            onColorChange={(value) => {\n              setQuery({ colorScheme: value })\n              forceUpdate()\n            }}\n            onDrawLabels={(value) => {\n              setQuery({ drawLabels: value })\n              forceUpdate()\n            }}\n            onDrag={(value) => {\n              setQuery({ drag: value })\n              forceUpdate()\n            }}\n            onPathDraw={(value) => {\n              setQuery({ drawPaths: value })\n              forceUpdate()\n            }}\n            onRedraw={() => setRedraw((redraw) => redraw + 1)}\n          />\n        </div>\n        <div className='body'>\n          {error ? <div style={{ color: 'red' }}>{error}</div> : null}\n          {graph ? (\n            <Graph\n              graph={graph}\n              ref={ref}\n              redraw={redraw}\n              drag={drag}\n              color={colorScheme}\n              drawLabels={drawLabels}\n              drawPaths={drawPaths}\n              onFeatureClick={(data) => {\n                setFeatureData(data)\n              }}\n              settings={settings}\n            />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { QueryParamProvider } from 'use-query-params'\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryParamProvider>\n      <App />\n    </QueryParamProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n\n"],"sourceRoot":""}