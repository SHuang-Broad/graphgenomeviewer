{"version":3,"sources":["FeatureDialog.js","util.js","Graph.js","Sidebar.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["FeatureDialog","data","onHide","Modal","show","Header","closeButton","Title","Body","Object","entries","filter","entry","includes","map","key","value","style","display","maxHeight","margin","backgroundColor","minWidth","wordBreak","overflow","String","tags","keys","length","Footer","Button","variant","onClick","generatePaths","generateEdges","links","graph","currentLinkId","linkNum","currentLinkSet","i","link","original","id","push","source","x","y","target","Graph","React","forwardRef","props","ref","gref","useRef","drawPaths","settings","chunkSize","forceSteps","linkSteps","sequenceThickness","linkThickness","strength","theta","color","width","height","onFeatureClick","console","log","useMemo","G","Gp","nodes","seen","paths","path","pathNodes","split","j","curr","name","sequence","rest","LN","concat","strand1","strand2","loop","reprocessGraph","colors","fromEntries","p","d3","d","create","simulation","force","distance","iterations","tick","useEffect","current","call","extent","scaleExtent","on","attr","transform","edges","forEach","endsWith","viewBox","toString","x1","y1","x2","y2","s1","t1","s2","t2","dp1","Math","sqrt","dp2","pp","index","d1","d2","cx1","cy1","cx2","cy2","cpath","moveTo","bezierCurveTo","strokeWidth","stroke","fill","line","context","dx","dy","dr","drx","dry","xRot","largeArc","title","startsWith","replace","toLowerCase","darker","Sidebar","onColorChange","onPathDraw","Form","Group","Label","Control","onChange","event","as","saveAs","svg","xmlns","cloneNode","fragment","window","location","href","walker","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","attributes","setAttributeNS","string","XMLSerializer","serializeToString","Blob","type","serialize","checked","Check","label","SettingsDialog","paramSettings","onSettings","useState","setSettings","size","onSubmit","preventDefault","Row","column","sm","Text","muted","Col","val","AboutDialog","OpenURLDialog","onData","setValue","OpenFileDialog","onGraph","a","files","text","showAbout","setShowAbout","showSettings","setShowSettings","showOpenURL","setShowOpenURL","showOpenFile","setShowOpenFile","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","Item","Link","App","featureData","setFeatureData","dataset","setDataset","setData","error","setError","setColor","pathDraw","setPathDraw","fetch","result","ok","Error","statusText","undefined","message","file","cigar","parseGFA","onModal","c","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.11fa28dc.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\n\nexport function FeatureDialog({ data, onHide }) {\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>Feature details</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <div>Attributes</div>\n        {Object.entries(data)\n          .filter(entry => !['source', 'target', 'linkNum', 'tags'].includes(entry[0]))\n          .map(([key, value]) => (\n            <div\n              key={`${key}_${value}`}\n              style={{ display: 'flex', maxHeight: 150, margin: 3 }}\n            >\n              <div style={{ backgroundColor: '#dda', minWidth: 100 }}>{key}</div>\n              <div style={{ wordBreak: 'break-word', overflow: 'auto' }}>\n                {String(value)}\n              </div>\n            </div>\n          ))}\n        <hr />\n        {data.tags && Object.keys(data.tags).length ? (\n          <>\n            <div>Tags</div>\n            {Object.entries(data.tags).map(([key, value]) => (\n              <div\n                key={`${key}_${value}`}\n                style={{ display: 'flex', maxHeight: 150, margin: 3 }}\n              >\n                <div style={{ backgroundColor: '#dda', minWidth: 100 }}>{key}</div>\n                <div style={{ wordBreak: 'break-word', overflow: 'auto' }}>\n                  {String(value)}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onHide}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","// simple handcoded GFA parser\nexport function parseGFA(file) {\n  const graph = { nodes: [], links: [], paths: [] }\n  for (const line of file.split('\\n')) {\n    if (line.startsWith('S')) {\n      const [, name, sequence, ...rest] = line.split('\\t')\n      const tags = {}\n      for (let i = 0; i < rest.length; i++) {\n        const [name, type, val] = rest[i].split(':')\n        if (type === 'i') {\n          tags[name] = +val\n        } else if (type === 'Z') {\n          tags[name] = val\n        }\n      }\n      graph.nodes.push({ id: name, sequence, tags })\n    } else if (line.startsWith('L')) {\n      const [, source, strand1, target, strand2, cigar, ...rest] = line.split('\\t')\n      const tags = {}\n      for (let i = 0; i < rest.length; i++) {\n        const [name, type, val] = rest[i].split(':')\n        if (type === 'i') {\n          tags[name] = +val\n        } else if (type === 'Z') {\n          tags[name] = val\n        }\n      }\n      graph.links.push({ source, target, strand1, strand2, cigar, tags })\n    } else if (line.startsWith('P')) {\n      const [, name, path, ...rest] = line.split('\\t')\n\n      graph.paths.push({ name, path, rest })\n    }\n  }\n  return graph\n}\n\n// adapted from https://observablehq.com/@mbostock/saving-svg\nexport function serialize(svg) {\n  const xmlns = 'http://www.w3.org/2000/xmlns/'\n  const xlinkns = 'http://www.w3.org/1999/xlink'\n  const svgns = 'http://www.w3.org/2000/svg'\n\n  svg = svg.cloneNode(true)\n  const fragment = `${window.location.href}#`\n  const walker = document.createTreeWalker(svg, NodeFilter.SHOW_ELEMENT, null, false)\n  while (walker.nextNode()) {\n    for (const attr of walker.currentNode.attributes) {\n      if (attr.value.includes(fragment)) {\n        attr.value = attr.value.replace(fragment, '#')\n      }\n    }\n  }\n  svg.setAttributeNS(xmlns, 'xmlns', svgns)\n  svg.setAttributeNS(xmlns, 'xmlns:xlink', xlinkns)\n  const serializer = new window.XMLSerializer()\n  const string = serializer.serializeToString(svg)\n  return new Blob([string], { type: 'image/svg+xml' })\n}\n\n// Given a GFA graph with sequence nodes ('S' tags), it breaks the S tags into\n// multiple nodes depending on how long the sequence is, which gives the graph\n// an organic look when the layout algorithm is applied\nexport function reprocessGraph(G, chunkSize) {\n  const Gp = { nodes: [], links: [] }\n\n  const seen = {}\n  for (let i = 0; i < (G.paths || {}).length; i++) {\n    const path = G.paths[i]\n    const pathNodes = path.path.split(',')\n    for (let j = 0; j < pathNodes.length - 1; j++) {\n      const curr = `${pathNodes[j]}_${pathNodes[j + 1]}`\n      if (!seen[curr]) {\n        seen[curr] = [path.name]\n      } else {\n        seen[curr].push(path.name)\n      }\n    }\n  }\n  for (let i = 0; i < G.nodes.length; i++) {\n    const { id, sequence, ...rest } = G.nodes[i]\n    const nodes = []\n    const length = sequence === '*' ? rest.tags.LN : sequence.length\n\n    // break long sequence into multiple nodes, for organic layout\n    nodes.push({ ...rest, id: `${id}-start` })\n    for (let i = chunkSize; i < length - chunkSize; i += chunkSize) {\n      nodes.push({ ...rest, id: `${id}-${i}` })\n    }\n    nodes.push({ ...rest, id: `${id}-end` })\n\n    // recreate links\n    for (let j = 0; j < nodes.length - 1; j++) {\n      const source = nodes[j].id\n      const target = nodes[j + 1].id\n      Gp.links.push({\n        ...rest,\n        source,\n        target,\n        id,\n        length,\n        sequence,\n        linkNum: i,\n      })\n    }\n    Gp.nodes = Gp.nodes.concat(nodes)\n  }\n  for (let i = 0; i < G.links.length; i++) {\n    const { strand1, strand2, source, target, ...rest } = G.links[i]\n    const paths = seen[`${source}${strand1}_${target}${strand2}`] || []\n    const loop = source === target\n\n    // enumerates cases for which end of source connects to\n    // which end of the target\n    const link = {\n      source: `${source}-${strand1 === '+' ? 'end' : 'start'}`,\n      target: `${target}-${strand2 === '+' ? 'start' : 'end'}`,\n      ...rest,\n    }\n    if (loop) {\n      link.loop = true\n    }\n    if (paths.length) {\n      link.paths = paths\n    }\n    Gp.links.push(link)\n  }\n  return Gp\n}\n\nexport function* generatePaths(links, graph) {\n  let currentLinkId = links[0].linkNum\n  let currentLinkSet = []\n  let original\n  for (let i = 0; i < links.length; i++) {\n    const link = links[i]\n    if (currentLinkId !== link.linkNum) {\n      if (original.id) {\n        yield { links: currentLinkSet, original }\n      }\n      currentLinkSet = []\n      currentLinkId = link.linkNum\n    }\n    original = graph[i]\n    currentLinkSet.push([link.source.x, link.source.y])\n    currentLinkSet.push([link.target.x, link.target.y])\n  }\n}\n\nexport function* generateEdges(links, graph) {\n  for (let i = 0; i < links.length; i++) {\n    const link = links[i]\n    const original = graph[i]\n    if (!original.id) {\n      yield {\n        links: [\n          [link.source.x, link.source.y],\n          [link.target.x, link.target.y],\n        ],\n        original,\n      }\n    }\n  }\n}\n","import React, { useMemo, useRef, useEffect } from 'react'\nimport * as d3 from 'd3'\nimport { reprocessGraph, generatePaths, generateEdges } from './util'\n\nconst Graph = React.forwardRef((props, ref) => {\n  const gref = useRef()\n  const {\n    graph,\n    drawPaths = false,\n    settings: {\n      chunkSize = 1000,\n      forceSteps = 500,\n      linkSteps = 3,\n      sequenceThickness = 10,\n      linkThickness = 2,\n      strength = -50,\n      theta = 0.9,\n    },\n    color = 'Rainbow',\n    width = 2000,\n    height = 1000,\n    onFeatureClick = () => {\n      console.log('no feature click configured')\n    },\n  } = props\n\n  const data = useMemo(() => {\n    return reprocessGraph(graph, chunkSize)\n  }, [chunkSize, graph])\n  const colors = useMemo(() => {\n    return Object.fromEntries(\n      (graph.paths || []).map((p, i) => {\n        return [p.name, d3.schemeCategory10[i]]\n      }),\n    )\n  }, [graph.paths])\n  const links = useMemo(() => {\n    const links = data.links.map(d => Object.create(d))\n    const nodes = data.nodes.map(d => Object.create(d))\n    const simulation = d3\n      .forceSimulation(nodes)\n      .force(\n        'link',\n        d3\n          .forceLink(links)\n          .id(d => d.id)\n          .distance(link => {\n            return link.sequence ? 1 : 10\n          })\n          .iterations(linkSteps),\n      )\n      .force('charge', d3.forceManyBody().strength(strength).theta(theta))\n      .force('center', d3.forceCenter(width / 2, height / 2))\n\n    for (let i = 0; i < forceSteps; ++i) {\n      simulation.tick()\n    }\n    return links\n  }, [data.links, data.nodes, forceSteps, height, linkSteps, strength, theta, width])\n\n  useEffect(() => {\n    // zoom logic, similar to https://observablehq.com/@d3/zoom\n    function zoomed() {\n      d3.select(gref.current).attr('transform', d3.event.transform)\n    }\n    d3.select(ref.current).call(\n      d3\n        .zoom()\n        .extent([\n          [0, 0],\n          [width, height],\n        ])\n        .scaleExtent([0.1, 8])\n        .on('zoom', zoomed),\n    )\n  }, [height, ref, width])\n\n  const paths = [...generatePaths(links, data.links)]\n  const edges = [...generateEdges(links, data.links)]\n\n  const map = {}\n  paths.forEach(path => {\n    const { source, target, linkNum } = path.original\n    if (source.endsWith('start')) {\n      map[source] = {\n        source: links[linkNum].target,\n        target: links[linkNum].source,\n      }\n      map[target] = {\n        target: links[linkNum].target,\n        source: links[linkNum].source,\n      }\n    } else {\n      map[source] = {\n        source: links[linkNum].source,\n        target: links[linkNum].target,\n      }\n      map[target] = {\n        target: links[linkNum].source,\n        source: links[linkNum].target,\n      }\n    }\n  })\n\n  if (drawPaths && !edges[0].original.paths) {\n    return <h1>no paths found</h1>\n  }\n  return (\n    <svg width=\"100%\" height=\"100%\" ref={ref} viewBox={[0, 0, width, height].toString()}>\n      <g ref={gref}>\n        {edges.map(p => {\n          const x1 = p.links[0][0]\n          const y1 = p.links[0][1]\n          const x2 = p.links[1][0]\n          const y2 = p.links[1][1]\n\n          if (drawPaths) {\n            const { source: s1, target: t1 } = map[p.original.source]\n            const { source: s2, target: t2 } = map[p.original.target]\n            // implements this algorithm to calculate a control point\n            // that points \"forwards\" of a given contig node\n            // https://math.stackexchange.com/questions/175896\n            const dp1 = Math.sqrt((t1.y - s1.y) ** 2 + (t1.x - s1.x) ** 2)\n            const dp2 = Math.sqrt((t2.y - s2.y) ** 2 + (t2.x - s2.x) ** 2)\n\n            return p.original.paths.map((pp, index) => {\n              const d1 = (60 + index * 50) / dp1\n              const d2 = (60 + index * 50) / dp2\n              const cx1 = (1 - d1) * s1.x + d1 * t1.x\n              const cy1 = (1 - d1) * s1.y + d1 * t1.y\n              const cx2 = (1 - d2) * s2.x + d2 * t2.x\n              const cy2 = (1 - d2) * s2.y + d2 * t2.y\n              const cpath = d3.path()\n              cpath.moveTo(x1, y1)\n              cpath.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2)\n              return (\n                <path\n                  key={cpath.toString()}\n                  d={cpath}\n                  strokeWidth={linkThickness}\n                  stroke={colors[pp]}\n                  fill=\"none\"\n                  onClick={() => onFeatureClick(p.original)}\n                />\n              )\n            })\n          } else {\n            const line = d3.line().context(null)\n            const x1 = p.links[0][0]\n            const y1 = p.links[0][1]\n            let x2 = p.links[1][0]\n            let y2 = p.links[1][1]\n            const dx = x2 - x1\n            const dy = y2 - y1\n            const dr = Math.sqrt(dx * dx + dy * dy)\n            // Defaults for normal edge.\n            let drx = dr\n            let dry = dr\n            let xRot = 0 // degrees\n            let largeArc = 0 // 1 or 0\n            const sweep = 0 // 1 or 0\n\n            let path\n            // Self edge.\n            if (p.original.loop) {\n              // Fiddle with this angle to get loop oriented.\n              xRot = 90\n\n              // Needs to be 1.\n              largeArc = 1\n\n              // Change sweep to change orientation of loop.\n              //sweep = 0;\n\n              // Make drx and dry different to get an ellipse\n              // instead of a circle.\n              drx = -30\n              dry = -20\n\n              // For whatever reason the arc collapses to a point if the beginning\n              // and ending points of the arc are the same, so kludge it.\n              x2 = x2 + 1\n              y2 = y2 + 1\n              path = `M${x1},${y1}A${drx},${dry} ${xRot},${largeArc},${sweep} ${x2},${y2}`\n            } else {\n              path = line(p.links)\n            }\n\n            return (\n              <path\n                key={path.toString()}\n                d={path}\n                strokeWidth={linkThickness}\n                stroke=\"black\"\n                fill=\"none\"\n                onClick={() => onFeatureClick(p.original)}\n              ></path>\n            )\n          }\n        })}\n\n        {paths.map((p, i) => {\n          const line = d3.line().context(null)\n          const path = line(p.links)\n          return (\n            <path\n              key={path.toString()}\n              d={path}\n              title={p.id}\n              strokeWidth={sequenceThickness}\n              stroke={\n                color.startsWith('Just')\n                  ? color.replace('Just', '').toLowerCase()\n                  : d3.hsl(d3[`interpolate${color}`](i / paths.length)).darker()\n              }\n              fill=\"none\"\n              onClick={() => onFeatureClick(p.original)}\n            >\n              <title>{p.id}</title>\n            </path>\n          )\n        })}\n      </g>\n    </svg>\n  )\n})\nexport { Graph }\n","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { serialize } from './util'\nimport saveAs from 'file-saver'\nconst Sidebar = React.forwardRef(({ onColorChange, onPathDraw, color }, ref) => {\n  return (\n    <div>\n      <p>Settings</p>\n      <Form.Group>\n        <Form.Label>Color</Form.Label>\n        <Form.Control\n          value={color}\n          onChange={event => onColorChange(event.target.value)}\n          as=\"select\"\n        >\n          <option>JustGrey</option>\n          <option>Turbo</option>\n          <option>Rainbow</option>\n          <option>Spectral</option>\n          <option>Viridis</option>\n          <option>RdYlBu</option>\n        </Form.Control>\n        <br />\n        <Button onClick={() => saveAs(serialize(ref.current))}>Export SVG</Button>\n        <Form.Group\n          onChange={event => {\n            onPathDraw(event.target.checked)\n          }}\n        >\n          <Form.Check type=\"checkbox\" label=\"Draw paths\" />\n        </Form.Group>\n      </Form.Group>\n    </div>\n  )\n})\nexport { Sidebar }\n","import React, { useRef, useState } from 'react'\nimport { Button, Col, Form, Modal, Navbar, Nav, NavDropdown, Row } from 'react-bootstrap'\n\nfunction SettingsDialog({ onHide, settings: paramSettings, onSettings }) {\n  const [settings, setSettings] = useState(paramSettings)\n  const {\n    chunkSize,\n    forceSteps,\n    linkSteps,\n    strength,\n    theta,\n    sequenceThickness,\n    linkThickness,\n  } = settings\n  return (\n    <Modal show={true} onHide={onHide} size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>Settings</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={event => {\n            event.preventDefault()\n            onSettings({\n              ...settings,\n              chunkSize: +chunkSize,\n              forceSteps: +forceSteps,\n              linkSteps: +linkSteps,\n              strength: +strength,\n              theta: +theta,\n              sequenceThickness: +sequenceThickness,\n              linkThickness: +linkThickness,\n            })\n            onHide()\n          }}\n        >\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Number of simulation steps for the nodes\n              <Form.Text muted>Used in the force-based layout simulation</Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={forceSteps}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    forceSteps: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Number of simulation steps for the links\n              <Form.Text muted>Used in the force-based layout simulation</Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={linkSteps}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    linkSteps: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Sequence chunk size\n              <Form.Text muted>\n                If a contig is of length 5000, then chunk length 1000 would become 5\n                segments. Note that contigs smaller than the chunk length may not be\n                proportionally sized\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={chunkSize}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    chunkSize: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Theta\n              <Form.Text muted>Parameter for the force directed layout</Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={theta}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    theta: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Strength\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={strength}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    strength: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Sequence thickness\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={sequenceThickness}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    sequenceThickness: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Link thickness\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"input\"\n                value={linkThickness}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    linkThickness: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction AboutDialog({ onHide }) {\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>graphgenome browser</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>\n          This is a small demo of browsing a simple graph genomes. The samples are\n          provided via GFA format\n        </p>\n        <p>\n          Contact <a href=\"mainto:colin.diesh@gmail.com\">Colin Diesh</a>\n        </p>\n        <p>\n          Thanks to the BCC2020 pangenome team, and{' '}\n          <a href=\"https://github.com/rrwick/Bandage\">Bandage</a> for inspiration.\n        </p>\n        <p>\n          Sample data from GFA-spec repo (MT.gfa), Andrea Guarracino (path example), and\n          gfalint (Shaun Jackman)\n        </p>\n        <a href=\"https://github.com/cmdcolin/graphgenomeviewer\">GitHub</a>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction OpenURLDialog({ onHide, onData }) {\n  const [value, setValue] = useState()\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>graphgenome browser</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={() => {\n            onData(value)\n            onHide()\n          }}\n        >\n          <Form.Group>\n            <Form.Label>Enter URL</Form.Label>\n            <Form.Control\n              type=\"input\"\n              value={value}\n              onChange={event => setValue(event.target.value)}\n            />\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction OpenFileDialog({ onHide, onGraph }) {\n  const ref = useRef()\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>Open file</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={async event => {\n            event.preventDefault()\n            const data = await ref.current.files[0].text()\n            onGraph(data)\n            onHide()\n          }}\n        >\n          <Form.Group>\n            <Form.Label>Open file</Form.Label>\n            <Form.Control ref={ref} type=\"file\" />\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport function Header({ onData, settings, onGraph, onSettings }) {\n  const [showAbout, setShowAbout] = useState()\n  const [showSettings, setShowSettings] = useState()\n  const [showOpenURL, setShowOpenURL] = useState()\n  const [showOpenFile, setShowOpenFile] = useState()\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">graphgenome browser</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavDropdown title=\"File\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item onClick={() => setShowOpenURL(true)}>\n                Open URL\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => setShowOpenFile(true)}>\n                Open file\n              </NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown title=\"Examples\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item onClick={() => onData('MT.gfa')}>\n                MT GFA-spec example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('toy_pangenome.gfa')}>\n                Paths example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('big1.gfa')}>Big1</NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('ir1.gfa')}>Ir1</NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link\n              onClick={() => {\n                setShowSettings(true)\n              }}\n            >\n              Settings\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => {\n                setShowAbout(true)\n              }}\n            >\n              About\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      {showAbout ? <AboutDialog onHide={() => setShowAbout(false)} /> : null}\n      {showSettings ? (\n        <SettingsDialog\n          settings={settings}\n          onHide={() => setShowSettings(false)}\n          onSettings={onSettings}\n        />\n      ) : null}\n      {showOpenURL ? (\n        <OpenURLDialog onData={onData} onHide={() => setShowOpenURL(false)} />\n      ) : null}\n      {showOpenFile ? (\n        <OpenFileDialog onGraph={onGraph} onHide={() => setShowOpenFile(false)} />\n      ) : null}\n    </>\n  )\n}\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { FeatureDialog } from './FeatureDialog'\nimport { Graph } from './Graph'\nimport { Sidebar } from './Sidebar'\nimport { Header } from './Header'\nimport { parseGFA } from './util'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nfunction App() {\n  const [featureData, setFeatureData] = useState()\n  const [dataset, setDataset] = useState('MT.gfa')\n  const [data, setData] = useState()\n  const [error, setError] = useState()\n  const [color, setColor] = useState('Rainbow')\n  const [pathDraw, setPathDraw] = useState(false)\n  const [settings, setSettings] = useState({\n    strength: -50,\n    chunkSize: 1000,\n    forceSteps: 200,\n    linkSteps: 3,\n    sequenceThickness: 10,\n    linkThickness: 2,\n    theta: 0.9,\n  })\n  const ref = useRef()\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const result = await fetch(dataset)\n        if (!result.ok) {\n          throw new Error(`Failed to fetch ${result.statusText}`)\n        }\n        const text = await result.text()\n        setData(text)\n        setError(undefined)\n      } catch (e) {\n        console.error(e)\n        setError(e.message)\n      }\n    })()\n  }, [dataset])\n\n  const graph = useMemo(() => {\n    return data ? parseGFA(data) : undefined\n  }, [data])\n\n  return (\n    <div>\n      <Header\n        onData={d => {\n          setDataset(d)\n        }}\n        onGraph={d => {\n          setData(d)\n        }}\n        onSettings={d => {\n          setSettings(d)\n        }}\n        settings={settings}\n      />\n      {featureData ? (\n        <FeatureDialog\n          data={featureData}\n          onModal={data => {\n            setFeatureData(data)\n          }}\n          onHide={() => {\n            setFeatureData(undefined)\n          }}\n        />\n      ) : null}\n      <div className=\"flexcontainer\">\n        <div id=\"sidebar\" className=\"sidebar\">\n          <Sidebar\n            ref={ref}\n            color={color}\n            onColorChange={c => setColor(c)}\n            onPathDraw={d => setPathDraw(d)}\n          />\n        </div>\n        <div className=\"body\">\n          {error ? <div style={{ color: 'red' }}>{error}</div> : null}\n          {graph ? (\n            <Graph\n              graph={graph}\n              ref={ref}\n              color={color}\n              drawPaths={pathDraw}\n              onFeatureClick={data => {\n                setFeatureData(data)\n              }}\n              settings={settings}\n            />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}