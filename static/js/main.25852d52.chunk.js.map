{"version":3,"sources":["FeatureDialog.js","../../lib/dist/util.js","../../lib/dist/index.js","Sidebar.js","SettingsDialog.js","Header.js","util.js","App.js","index.js"],"names":["FeatureDialog","data","onHide","Modal","show","Header","closeButton","Title","Body","Object","entries","filter","entry","includes","map","key","value","style","display","maxHeight","margin","backgroundColor","minWidth","wordBreak","overflow","String","tags","keys","length","Footer","Button","variant","onClick","makePath","edges","path","i","st","push","source","x","y","last","target","generatePaths","graph","reduce","rv","v","Function","undefined","el","find","r","values","links","original","projectLine","x1","y1","x2","y2","dt","d","Math","sqrt","Path","drawLabels","sequenceThickness","stroke","onFeatureClick","line","d3","context","t1","s1","t2","s2","cx1","cy1","cx2","cy2","invisibleTextPath","React","createElement","Fragment","id","strokeWidth","fill","dy","startOffset","textAnchor","href","Graph","forwardRef","props","ref","gref","useRef","drawPaths","drag","settings","chunkSize","forceSteps","linkSteps","linkThickness","theta","forceType","strengthCenter","strengthXY","color","width","height","redraw","console","log","zoom","extent","scaleExtent","useMemo","G","Gp","nodes","seen","paths","pathNodes","split","j","curr","name","sequence","rest","linkNum","concat","strand1","strand2","loop","link","reprocessGraph","colors","fromEntries","p","create","random","simulation","force","distance","iterations","strength","tick","useEffect","svg","current","call","on","event","attr","transform","result","generateEdges","nodePathMap","l","fontSize","viewBox","toString","m1","m2","m3","abs","pp","index","dx","dr","sweep","cpath","moveTo","bezierCurveTo","startsWith","replace","toLowerCase","darker","Sidebar","onDrawLabels","onDrag","onColorChange","onPathDraw","onRedraw","colorScheme","Form","Label","Control","onChange","as","Group","Check","checked","type","label","SettingsDialog","paramSettings","onSettings","useState","setSettings","size","onSubmit","preventDefault","Row","column","sm","Text","muted","Col","val","min","max","AboutDialog","OpenURLDialog","onData","setValue","OpenFileDialog","onGraph","a","files","text","onExportSVG","showAbout","setShowAbout","showSettings","setShowSettings","showOpenURL","setShowOpenURL","showOpenFile","setShowOpenFile","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","NavDropdown","title","Item","Link","parseTag","tag","App","featureData","setFeatureData","setData","error","setError","updateState","forceUpdate","useCallback","setRedraw","useQueryParams","withDefault","NumberParam","StringParam","dataset","BooleanParam","query","setQuery","fetch","ok","Error","statusText","message","file","header","headerLine","forEach","len","seq","tagfields","gfa1","slice","LN","cigar","source1","target1","charAt","parseGFA","saveAs","xmlns","cloneNode","fragment","window","location","walker","document","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","attributes","setAttributeNS","string","XMLSerializer","serializeToString","Blob","serialize","onModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25852d52.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\n\nexport function FeatureDialog({ data, onHide }) {\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>Feature details</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <div>Attributes</div>\n        {Object.entries(data)\n          .filter(entry => !['source', 'target', 'linkNum', 'tags'].includes(entry[0]))\n          .map(([key, value]) => (\n            <div\n              key={`${key}_${value}`}\n              style={{ display: 'flex', maxHeight: 150, margin: 3 }}\n            >\n              <div style={{ backgroundColor: '#dda', minWidth: 100 }}>{key}</div>\n              <div style={{ wordBreak: 'break-word', overflow: 'auto' }}>\n                {String(value)}\n              </div>\n            </div>\n          ))}\n        <hr />\n        {data.tags && Object.keys(data.tags).length ? (\n          <>\n            <div>Tags</div>\n            {Object.entries(data.tags).map(([key, value]) => (\n              <div\n                key={`${key}_${value}`}\n                style={{ display: 'flex', maxHeight: 150, margin: 3 }}\n              >\n                <div style={{ backgroundColor: '#dda', minWidth: 100 }}>{key}</div>\n                <div style={{ wordBreak: 'break-word', overflow: 'auto' }}>\n                  {String(value)}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onHide}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","// Given a GFA graph with sequence nodes ('S' tags), it breaks the S tags into\n// multiple nodes depending on how long the sequence is, which gives the graph\n// an organic look when the layout algorithm is applied\nexport function reprocessGraph(G, chunkSize) {\n  const Gp = {\n    nodes: [],\n    links: []\n  };\n  const seen = {};\n\n  for (let i = 0; i < (G.paths || {}).length; i++) {\n    const path = G.paths[i];\n    const pathNodes = path.path.split(',');\n\n    for (let j = 0; j < pathNodes.length - 1; j++) {\n      const curr = `${pathNodes[j]}_${pathNodes[j + 1]}`;\n\n      if (!seen[curr]) {\n        seen[curr] = [path.name];\n      } else {\n        seen[curr].push(path.name);\n      }\n    }\n  }\n\n  for (let i = 0; i < G.nodes.length; i++) {\n    const {\n      id,\n      sequence,\n      length,\n      ...rest\n    } = G.nodes[i];\n    const nodes = []; // break long sequence into multiple nodes, for organic layout\n\n    nodes.push({ ...rest,\n      id: `${id}-start`\n    });\n\n    for (let i = chunkSize; i < length - chunkSize; i += chunkSize) {\n      nodes.push({ ...rest,\n        id: `${id}-${i}`\n      });\n    }\n\n    nodes.push({ ...rest,\n      id: `${id}-end`\n    }); // recreate links\n\n    for (let j = 0; j < nodes.length - 1; j++) {\n      const source = nodes[j].id;\n      const target = nodes[j + 1].id;\n      Gp.links.push({ ...rest,\n        source,\n        target,\n        id,\n        length,\n        sequence,\n        linkNum: i\n      });\n    }\n\n    Gp.nodes = Gp.nodes.concat(nodes);\n  }\n\n  for (let i = 0; i < G.links.length; i++) {\n    const {\n      strand1,\n      strand2,\n      source,\n      target,\n      ...rest\n    } = G.links[i];\n    const paths = seen[`${source}${strand1}_${target}${strand2}`] || [];\n    const loop = source === target; // enumerates cases for which end of source connects to\n    // which end of the target\n\n    const link = {\n      source: `${source}-${strand1 === '+' ? 'end' : 'start'}`,\n      target: `${target}-${strand2 === '+' ? 'start' : 'end'}`,\n      ...rest\n    };\n\n    if (loop) {\n      link.loop = true;\n    }\n\n    if (paths.length) {\n      link.paths = paths;\n    }\n\n    Gp.links.push(link);\n  }\n\n  return Gp;\n} // source https://stackoverflow.com/questions/14446511/most-efficient-method-to-groupby-on-an-array-of-objects\n// returns an array that contains groupings of xs by attribute key\n\nfunction groupByArray(xs, key) {\n  return xs.reduce(function (rv, x) {\n    const v = key instanceof Function ? key(x) : x[key];\n\n    if (v !== undefined) {\n      const el = rv.find(r => r && r.key === v);\n\n      if (el) {\n        el.values.push(x);\n      } else {\n        rv.push({\n          key: v,\n          values: [x]\n        });\n      }\n    }\n\n    return rv;\n  }, []);\n} // connects successive start->end to a path\n// param edges: {source:{x,y}, target:{x,y}}[]\n\n\nfunction makePath(edges) {\n  const path = [];\n  let i = 0;\n\n  for (; i < edges.length; i++) {\n    const st = edges[i];\n    path.push([st.source.x, st.source.y]);\n  }\n\n  const last = edges[i - 1];\n  path.push([last.target.x, last.target.y]);\n  return path;\n} // groups the edges data structure by the linkNum attribute\n\n\nexport function generatePaths(edges, graph) {\n  const ret = groupByArray(edges, 'linkNum');\n  return ret.map(entry => ({\n    links: makePath(entry.values),\n    original: graph[entry.key]\n  }));\n}\nexport function generateEdges(links, graph) {\n  const result = [];\n\n  for (let i = 0; i < links.length; i++) {\n    const link = links[i];\n    const original = graph[i];\n\n    if (!original.id) {\n      result.push({\n        links: [[link.source.x, link.source.y], [link.target.x, link.target.y]],\n        original\n      });\n    }\n  }\n\n  return result;\n} // implements this algorithm to project a point \"forwards\" from a given contig\n// node translation of simple vector math here\n// https://math.stackexchange.com/questions/175896\n\nexport function projectLine(x1, y1, x2, y2, dt) {\n  const d = Math.sqrt((y2 - y1) ** 2 + (x2 - x1) ** 2);\n  const vx = (x2 - x1) / d;\n  const vy = (y2 - y1) / d;\n  return [x2 + dt * vx, y2 + dt * vy];\n}","import React, { useMemo, useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { projectLine, reprocessGraph, generatePaths, generateEdges } from './util';\nconst Graph = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const gref = useRef();\n  const {\n    graph,\n    drawPaths = false,\n    drawLabels = false,\n    drag = false,\n    settings: {\n      chunkSize = 1000,\n      forceSteps = 500,\n      linkSteps = 3,\n      sequenceThickness = 10,\n      linkThickness = 2,\n      theta = 0.9,\n      forceType = 'center',\n      strengthCenter = -50,\n      strengthXY = 0.3\n    },\n    color = 'Rainbow',\n    width = 2000,\n    height = 1000,\n    redraw = 0,\n    onFeatureClick = () => {\n      console.log('no feature click configured');\n    }\n  } = props;\n  const zoom = useRef(d3.zoom().extent([[0, 0], [width, height]]).scaleExtent([0.1, 8]));\n  const data = useMemo(() => {\n    return reprocessGraph(graph, chunkSize);\n  }, [chunkSize, graph]);\n  const colors = useMemo(() => {\n    return Object.fromEntries((graph.paths || []).map((p, i) => {\n      return [p.name, d3.schemeCategory10[i]];\n    }));\n  }, [graph.paths]);\n  const links = useMemo(() => {\n    const links = data.links.map(d => Object.create({ ...d,\n      x: Math.random(),\n      y: Math.random()\n    }));\n    const nodes = data.nodes.map(d => Object.create({ ...d,\n      x: Math.random(),\n      y: Math.random()\n    }));\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(links).id(d => d.id).distance(link => {\n      return link.sequence ? 1 : 10;\n    }).iterations(linkSteps)).force('charge', d3.forceManyBody().strength(strengthCenter).theta(theta));\n\n    if (forceType === 'center') {\n      simulation.force('center', d3.forceCenter(width / 3, height / 3));\n    } else if (forceType === 'xy') {\n      simulation.force('x', d3.forceX().x(width / 3).strength(strengthXY)).force('y', d3.forceY().y(height / 3).strength(strengthXY));\n    }\n\n    for (let i = 0; i < forceSteps; ++i) {\n      simulation.tick();\n    } // used for redrawing\n    // eslint-disable-next-line no-unused-vars\n\n\n    const m = redraw;\n    return links;\n  }, [data.links, data.nodes, linkSteps, strengthCenter, theta, forceType, redraw, width, height, strengthXY, forceSteps]);\n  useEffect(() => {\n    // zoom logic, similar to https://observablehq.com/@d3/zoom\n    // toggling logic from https://stackoverflow.com/a/29762389/2129219\n    const svg = d3.select(ref.current);\n\n    if (drag) {\n      svg.call(zoom.current.on('zoom', event => {\n        d3.select(gref.current).attr('transform', event.transform);\n      }));\n    } else {\n      svg.on('.zoom', null);\n    }\n  }, [drag, height, ref, width, zoom]);\n  const paths = generatePaths(links, graph.nodes);\n  const edges = generateEdges(links, data.links);\n  const nodePathMap = {};\n\n  for (let i = 0; i < paths.length; i++) {\n    const p = paths[i];\n    const l = p.links.length;\n    nodePathMap[`${p.original.id}-start`] = [p.links[1], p.links[0]];\n    nodePathMap[`${p.original.id}-end`] = [p.links[l - 2], p.links[l - 1]];\n  }\n\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"100%\",\n    height: \"100%\",\n    ref: ref,\n    style: {\n      fontSize: 10\n    },\n    viewBox: [0, 0, width, height].toString()\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    ref: gref\n  }, edges.map((p, j) => {\n    const x1 = p.links[0][0];\n    const y1 = p.links[0][1];\n    const x2 = p.links[1][0];\n    const y2 = p.links[1][1];\n\n    if (drawPaths) {\n      const [s1, t1] = nodePathMap[p.original.source];\n      const [s2, t2] = nodePathMap[p.original.target];\n      const m1 = (y2 - y1) / (x2 - x1);\n      const m2 = (s1[1] - t1[1]) / (s1[0] - t1[0]);\n      const m3 = (s2[1] - t2[1]) / (s2[0] - t2[0]);\n\n      if (Math.abs(m1 - m2) < 0.2 || Math.abs(m1 - m3) < 0.2) {\n        return p.original.paths ? p.original.paths.map((pp, index) => {\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const dr = Math.sqrt(dx * dx + dy * dy) + Math.random() * 40;\n          const sweep = index % 2;\n          const cpath = `M${x1},${y1}A${dr},${dr} 0 0,${sweep} ${x2},${y2}`;\n          return /*#__PURE__*/React.createElement(\"path\", {\n            key: `${cpath}-${index}`,\n            d: cpath,\n            strokeWidth: linkThickness,\n            stroke: colors[pp],\n            fill: \"none\",\n            onClick: () => onFeatureClick(p.original)\n          }, /*#__PURE__*/React.createElement(\"title\", null, pp));\n        }) : null;\n      }\n\n      return p.original.paths ? p.original.paths.map((pp, index) => {\n        const [cx1, cy1] = projectLine(s1[0], s1[1], t1[0], t1[1], 60 + index * 30);\n        const [cx2, cy2] = projectLine(s2[0], s2[1], t2[0], t2[1], 60 + index * 30);\n        const cpath = d3.path();\n        cpath.moveTo(x1, y1);\n        cpath.bezierCurveTo(cx1, cy1, cx2, cy2, x2, y2);\n        return /*#__PURE__*/React.createElement(\"path\", {\n          key: `${cpath.toString()}-${index}`,\n          d: cpath,\n          strokeWidth: linkThickness,\n          stroke: colors[pp],\n          fill: \"none\",\n          onClick: () => onFeatureClick(p.original)\n        }, /*#__PURE__*/React.createElement(\"title\", null, pp));\n      }) : null;\n    } else {\n      const [s1, t1] = nodePathMap[p.original.source];\n      const [s2, t2] = nodePathMap[p.original.target];\n      const m1 = (y2 - y1) / (x2 - x1);\n      const m2 = (s1[1] - t1[1]) / (s1[0] - t1[0]);\n      const m3 = (s2[1] - t2[1]) / (s2[0] - t2[0]);\n      const line = d3.line().context(null);\n      const xRot = 90;\n      const sweep = 0; // 1 or 0\n\n      const largeArc = 1;\n      const drx = -30;\n      const dry = -20;\n      const path = p.original.loop && !(m1 - m2 < 0.5 || m1 - m3 < 0.5) ? `M${x1},${y1}A${drx},${dry} ${xRot},${largeArc},${sweep} ${x2},${y2}` : line(p.links);\n      return /*#__PURE__*/React.createElement(\"path\", {\n        key: `${path.toString()}-${j}`,\n        d: path,\n        strokeWidth: linkThickness,\n        stroke: \"black\",\n        fill: \"none\",\n        onClick: () => onFeatureClick(p.original)\n      });\n    }\n  }), paths.map((p, i) => {\n    const stroke = color.startsWith('Just') ? color.replace('Just', '').toLowerCase() : d3.hsl(d3[`interpolate${color}`](i / paths.length)).darker();\n    return /*#__PURE__*/React.createElement(Path, {\n      key: p.original.id,\n      sequenceThickness: sequenceThickness,\n      drawLabels: drawLabels,\n      path: p,\n      stroke: stroke,\n      onFeatureClick: onFeatureClick\n    });\n  })));\n});\n\nfunction Path({\n  path,\n  drawLabels,\n  sequenceThickness,\n  stroke,\n  onFeatureClick\n}) {\n  const line = d3.line().context(null);\n  const t1 = path.links[0];\n  const s1 = path.links[1];\n  const t2 = path.links[path.links.length - 1];\n  const s2 = path.links[path.links.length - 2];\n  const [cx1, cy1] = projectLine(s1[0], s1[1], t1[0], t1[1], 100);\n  const [cx2, cy2] = projectLine(s2[0], s2[1], t2[0], t2[1], 100);\n  const invisibleTextPath = line([[cx1, cy1], ...path.links, [cx2, cy2]]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n    id: path.original.id,\n    d: line(path.links),\n    strokeWidth: sequenceThickness,\n    stroke: stroke,\n    fill: \"none\",\n    onClick: () => onFeatureClick(path.original)\n  }, /*#__PURE__*/React.createElement(\"title\", null, path.original.id)), drawLabels ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n    id: `${path.original.id}_invisible`,\n    d: invisibleTextPath,\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    dy: 12\n  }, /*#__PURE__*/React.createElement(\"textPath\", {\n    startOffset: \"50%\",\n    textAnchor: \"middle\",\n    href: `#${path.original.id}_invisible`\n  }, path.original.id))) : null);\n}\n\nexport default Graph;","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nexport function Sidebar({\n  onDrawLabels,\n  drawLabels,\n  drawPaths,\n  drag,\n  onDrag,\n  onColorChange,\n  onPathDraw,\n  onRedraw,\n  colorScheme,\n}) {\n  return (\n    <div>\n      <p>Settings</p>\n      <Form.Label>Color</Form.Label>\n      <Form.Control\n        value={colorScheme}\n        onChange={event => onColorChange(event.target.value)}\n        as=\"select\"\n      >\n        <option>JustGrey</option>\n        <option>Turbo</option>\n        <option>Rainbow</option>\n        <option>Spectral</option>\n        <option>Viridis</option>\n        <option>RdYlBu</option>\n      </Form.Control>\n      <br />\n      <Form.Group>\n        <Form.Check\n          onChange={event => {\n            onPathDraw(event.target.checked)\n          }}\n          type=\"checkbox\"\n          label=\"Draw paths\"\n          checked={drawPaths}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Check\n          onChange={event => {\n            onDrawLabels(event.target.checked)\n          }}\n          type=\"checkbox\"\n          label=\"Draw labels\"\n          checked={drawLabels}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Check\n          onChange={event => {\n            onDrag(event.target.checked)\n          }}\n          type=\"checkbox\"\n          label=\"Enable panning/zooming?\"\n          checked={drag}\n        />\n      </Form.Group>\n      <br />\n      <Button onClick={() => onRedraw()}>Redraw</Button>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap'\n\nexport function SettingsDialog({ onHide, settings: paramSettings, onSettings }) {\n  const [settings, setSettings] = useState(paramSettings)\n  const {\n    chunkSize,\n    forceSteps,\n    linkSteps,\n    strengthCenter,\n    strengthXY,\n    forceType,\n    theta,\n    sequenceThickness,\n    linkThickness,\n  } = settings\n  return (\n    <Modal show={true} onHide={onHide} size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>Settings</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={event => {\n            event.preventDefault()\n            onSettings({\n              ...settings,\n              chunkSize: +chunkSize,\n              forceType: forceType,\n              forceSteps: +forceSteps,\n              linkSteps: +linkSteps,\n              strengthCenter: +strengthCenter,\n              theta: +theta,\n              sequenceThickness: +sequenceThickness,\n              linkThickness: +linkThickness,\n            })\n            onHide()\n          }}\n        >\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Number of simulation steps for the nodes\n              <Form.Text muted>Used in the force-based layout simulation</Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={forceSteps}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    forceSteps: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Number of simulation steps for the links\n              <Form.Text muted>\n                Increases the rigidity of the link based constraints\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={linkSteps}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    linkSteps: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Sequence chunk size\n              <Form.Text muted>\n                If a contig is of length 5000, then chunk length 1000 would become 5\n                segments. Note that contigs smaller than the chunk length may not be\n                proportionally sized\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={chunkSize}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    chunkSize: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Theta\n              <Form.Text muted>Parameter for the force directed layout</Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={theta}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    theta: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Strength (force xy)\n              <Form.Text muted>\n                This parameter should be between [0,1], applies to the XY layout\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={strengthXY}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    strengthXY: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Strength (particle charge)\n              <Form.Text muted>\n                This value is like a charged particle force, by being negative it keeps\n                things farther apart\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"number\"\n                value={strengthCenter}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    strengthCenter: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Force type\n              <Form.Text muted>\n                Force XY results in a circular style layout that can be helpful for more\n                disjoint graphs, force center is default\n              </Form.Text>\n            </Form.Label>\n            <Col>\n              <Form.Control\n                value={forceType}\n                onChange={event =>\n                  setSettings(settings => ({\n                    ...settings,\n                    forceType: event.target.value,\n                  }))\n                }\n                as=\"select\"\n              >\n                <option>center</option>\n                <option>xy</option>\n              </Form.Control>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Sequence thickness\n            </Form.Label>\n            <Col>\n              <input\n                type=\"range\"\n                min={1}\n                max={100}\n                style={{ width: '100%' }}\n                value={sequenceThickness}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    sequenceThickness: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm=\"4\">\n              Link thickness\n            </Form.Label>\n            <Col>\n              <input\n                type=\"range\"\n                min={1}\n                max={100}\n                style={{ width: '100%' }}\n                value={linkThickness}\n                onChange={event => {\n                  const val = event.target.value\n                  setSettings(settings => ({\n                    ...settings,\n                    linkThickness: val,\n                  }))\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n","import React, { useRef, useState } from 'react'\nimport { Button, Form, Modal, Navbar, Nav, NavDropdown } from 'react-bootstrap'\nimport { SettingsDialog } from './SettingsDialog'\n\nfunction AboutDialog({ onHide }) {\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>graphgenome browser</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>\n          This is a small demo of browsing simple graph genomes. The app can read GFA\n          format URLs and local files, all processing is done client side currently.\n        </p>\n        <p>\n          Contact <a href=\"mainto:colin.diesh@gmail.com\">Colin Diesh</a>\n        </p>\n        <p>\n          Thanks to the BCC2020 pangenome team, and{' '}\n          <a href=\"https://github.com/rrwick/Bandage\">Bandage</a> for inspiration.\n        </p>\n        <p>\n          Sample data from GFA-spec repo (MT.gfa), Andrea Guarracino (path example), and\n          gfalint (Shaun Jackman)\n        </p>\n        <p>\n          This app attempts to support GFA2 but does not properly render fragments,\n          intricate edge details, or U and O paths\n        </p>\n        <a href=\"https://github.com/cmdcolin/graphgenomeviewer\">GitHub</a>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction OpenURLDialog({ onHide, onData }) {\n  const [value, setValue] = useState()\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>graphgenome browser</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={() => {\n            onData(value)\n            onHide()\n          }}\n        >\n          <Form.Group>\n            <Form.Label>Enter URL</Form.Label>\n            <Form.Control\n              type=\"input\"\n              value={value}\n              onChange={event => setValue(event.target.value)}\n            />\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction OpenFileDialog({ onHide, onGraph }) {\n  const ref = useRef()\n  return (\n    <Modal show={true} onHide={onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>Open file</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <Form\n          onSubmit={async event => {\n            event.preventDefault()\n            const data = await ref.current.files[0].text()\n            onGraph(data)\n            onHide()\n          }}\n        >\n          <Form.Group>\n            <Form.Label>Open file</Form.Label>\n            <Form.Control ref={ref} type=\"file\" />\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport function Header({ onData, settings, onGraph, onExportSVG, onSettings }) {\n  const [showAbout, setShowAbout] = useState()\n  const [showSettings, setShowSettings] = useState()\n  const [showOpenURL, setShowOpenURL] = useState()\n  const [showOpenFile, setShowOpenFile] = useState()\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">graphgenome browser</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavDropdown title=\"File\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item onClick={() => setShowOpenURL(true)}>\n                Open URL\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => setShowOpenFile(true)}>\n                Open file\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onExportSVG()}>\n                Export SVG\n              </NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown title=\"Examples\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item onClick={() => onData('MT.gfa')}>\n                MT GFA-spec example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('toy_pangenome.gfa')}>\n                Paths example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('example1.gfa')}>\n                Paths example 2\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('big1.gfa')}>Big1</NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('ir1.gfa')}>Ir1</NavDropdown.Item>\n              <NavDropdown.Item\n                onClick={() => onData('test_contig_placement_assembly_graph.gfa')}\n              >\n                Unicycler example\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('circle.gfa')}>\n                Simple circle\n              </NavDropdown.Item>\n              <NavDropdown.Item onClick={() => onData('example1.gfa2')}>\n                GFA2.0 example\n              </NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link\n              onClick={() => {\n                setShowSettings(true)\n              }}\n            >\n              Settings\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => {\n                setShowAbout(true)\n              }}\n            >\n              About\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      {showAbout ? <AboutDialog onHide={() => setShowAbout(false)} /> : null}\n      {showSettings ? (\n        <SettingsDialog\n          settings={settings}\n          onHide={() => setShowSettings(false)}\n          onSettings={onSettings}\n        />\n      ) : null}\n      {showOpenURL ? (\n        <OpenURLDialog onData={onData} onHide={() => setShowOpenURL(false)} />\n      ) : null}\n      {showOpenFile ? (\n        <OpenFileDialog onGraph={onGraph} onHide={() => setShowOpenFile(false)} />\n      ) : null}\n    </>\n  )\n}\n","// adapted from https://observablehq.com/@mbostock/saving-svg\nexport function serialize(svg) {\n  const xmlns = 'http://www.w3.org/2000/xmlns/'\n  const xlinkns = 'http://www.w3.org/1999/xlink'\n  const svgns = 'http://www.w3.org/2000/svg'\n\n  svg = svg.cloneNode(true)\n  const fragment = `${window.location.href}#`\n  const walker = document.createTreeWalker(\n    svg,\n    NodeFilter.SHOW_ELEMENT,\n    null,\n    false\n  )\n  while (walker.nextNode()) {\n    for (const attr of walker.currentNode.attributes) {\n      if (attr.value.includes(fragment)) {\n        attr.value = attr.value.replace(fragment, '#')\n      }\n    }\n  }\n  svg.setAttributeNS(xmlns, 'xmlns', svgns)\n  svg.setAttributeNS(xmlns, 'xmlns:xlink', xlinkns)\n  const serializer = new window.XMLSerializer()\n  const string = serializer.serializeToString(svg)\n  return new Blob([string], { type: 'image/svg+xml' })\n}\n\nfunction parseTag(tag, tags) {\n  const [name, type, val] = tag.split(':')\n  if (type === 'i') {\n    tags[name] = +val\n  } else if (type === 'Z') {\n    tags[name] = val\n  }\n}\n\nexport function parseGFA(file) {\n  const graph = { nodes: [], links: [], paths: [], header: [] }\n  for (const line of file.split('\\n')) {\n    if (line.startsWith('H')) {\n      const headerLine = {}\n      const [, ...rest] = line.split('\\t')\n      rest.forEach((tag) => parseTag(tag, headerLine))\n      graph.header.push(headerLine)\n    }\n    if (line.startsWith('S')) {\n      const [, name, ...rest] = line.split('\\t')\n      let len = 0\n      let seq = ''\n      let tagfields\n      let gfa1 = false\n      if (+rest[0]) {\n        len = +rest[0]\n        seq = rest[1]\n        tagfields = rest.slice(2)\n      } else {\n        gfa1 = true\n        seq = rest[0]\n        len = seq.length\n        tagfields = rest.slice(1)\n      }\n      const tags = {}\n      for (let i = 0; i < tagfields.length; i++) {\n        parseTag(rest[i], tags)\n      }\n      if (gfa1 && tags.LN) {\n        len = tags.LN\n      }\n      graph.nodes.push({ id: name, length: len, sequence: seq, tags })\n    } else if (line.startsWith('E')) {\n      // eslint-disable-next-line no-unused-vars\n      const [, , source, target, , , , , cigar, ...rest] = line.split('\\t')\n      const source1 = source.slice(0, -1)\n      const target1 = target.slice(0, -1)\n      const strand1 = source.charAt(source.length - 1)\n      const strand2 = source.charAt(target.length - 1)\n      const tags = {}\n      for (let i = 0; i < rest.length; i++) {\n        parseTag(rest[i], tags)\n      }\n\n      graph.links.push({\n        source: source1,\n        target: target1,\n        strand1,\n        strand2,\n        cigar,\n        tags\n      })\n    } else if (line.startsWith('L')) {\n      const [, source, strand1, target, strand2, cigar, ...rest] = line.split(\n        '\\t'\n      )\n      const tags = {}\n      for (let i = 0; i < rest.length; i++) {\n        parseTag(rest[i], tags)\n      }\n      graph.links.push({ source, target, strand1, strand2, cigar, tags })\n    } else if (line.startsWith('P')) {\n      const [, name, path, ...rest] = line.split('\\t')\n\n      graph.paths.push({ name, path, rest })\n    }\n  }\n  return graph\n}\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { FeatureDialog } from './FeatureDialog'\nimport Graph from 'graphgenomeviewer'\nimport { Sidebar } from './Sidebar'\nimport { Header } from './Header'\nimport { parseGFA, serialize } from './util'\nimport saveAs from 'file-saver'\nimport {\n  useQueryParams,\n  BooleanParam,\n  StringParam,\n  NumberParam,\n  withDefault\n} from 'use-query-params'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nfunction App() {\n  const [featureData, setFeatureData] = useState()\n  const [data, setData] = useState()\n  const [error, setError] = useState()\n  const [, updateState] = useState()\n  const forceUpdate = React.useCallback(() => updateState({}), [])\n  const [redraw, setRedraw] = useState(0)\n  const [query, setQuery] = useQueryParams({\n    strengthCenter: withDefault(NumberParam, -50),\n    strengthXY: withDefault(NumberParam, 0.1),\n    chunkSize: withDefault(NumberParam, 1000),\n    forceSteps: withDefault(NumberParam, 200),\n    linkSteps: withDefault(NumberParam, 1),\n    sequenceThickness: withDefault(NumberParam, 10),\n    linkThickness: withDefault(NumberParam, 2),\n    theta: withDefault(NumberParam, 0.9),\n    forceType: withDefault(StringParam, 'center'),\n    dataset: withDefault(StringParam, 'MT.gfa'),\n    colorScheme: withDefault(StringParam, 'Rainbow'),\n    drawLabels: withDefault(BooleanParam, false),\n    drawPaths: withDefault(BooleanParam, false),\n    drag: withDefault(BooleanParam, true)\n  })\n\n  const {\n    dataset,\n    drawLabels,\n    drawPaths,\n    colorScheme,\n    drag,\n    ...settings\n  } = query\n\n  const ref = useRef()\n  useEffect(() => {\n    ;(async () => {\n      try {\n        const result = await fetch(dataset)\n        if (!result.ok) {\n          throw new Error(`Failed to fetch ${result.statusText}`)\n        }\n        const text = await result.text()\n        setData(text)\n        setError(undefined)\n      } catch (e) {\n        console.error(e)\n        setError(e.message)\n      }\n    })()\n  }, [dataset])\n\n  const graph = useMemo(() => {\n    return data ? parseGFA(data) : undefined\n  }, [data])\n\n  return (\n    <div>\n      <Header\n        onData={(value) => {\n          setQuery({ dataset: value })\n          forceUpdate()\n        }}\n        onGraph={(graph) => {\n          setData(graph)\n        }}\n        onSettings={(settings) => {\n          setQuery(settings)\n          forceUpdate()\n        }}\n        onExportSVG={() => {\n          saveAs(serialize(ref.current))\n        }}\n        settings={settings}\n      />\n      {featureData ? (\n        <FeatureDialog\n          data={featureData}\n          onModal={(data) => {\n            setFeatureData(data)\n          }}\n          onHide={() => {\n            setFeatureData(undefined)\n          }}\n        />\n      ) : null}\n      <div className='flexcontainer'>\n        <div id='sidebar' className='sidebar'>\n          <Sidebar\n            colorScheme={colorScheme}\n            drawPaths={drawPaths}\n            drawLabels={drawLabels}\n            drag={drag}\n            onColorChange={(value) => {\n              setQuery({ colorScheme: value })\n              forceUpdate()\n            }}\n            onDrawLabels={(value) => {\n              setQuery({ drawLabels: value })\n              forceUpdate()\n            }}\n            onDrag={(value) => {\n              setQuery({ drag: value })\n              forceUpdate()\n            }}\n            onPathDraw={(value) => {\n              setQuery({ drawPaths: value })\n              forceUpdate()\n            }}\n            onRedraw={() => setRedraw((redraw) => redraw + 1)}\n          />\n        </div>\n        <div className='body'>\n          {error ? <div style={{ color: 'red' }}>{error}</div> : null}\n          {graph ? (\n            <Graph\n              graph={graph}\n              ref={ref}\n              redraw={redraw}\n              drag={drag}\n              color={colorScheme}\n              drawLabels={drawLabels}\n              drawPaths={drawPaths}\n              onFeatureClick={(data) => {\n                setFeatureData(data)\n              }}\n              settings={settings}\n            />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { QueryParamProvider } from 'use-query-params'\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryParamProvider>\n      <App />\n    </QueryParamProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n\n"],"sourceRoot":""}